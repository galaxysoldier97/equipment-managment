swagger: '2.0'
info:
  version: 2.20.0
  title: tecrep-equipments-management
host: api.stg.prod.lan
basePath: /tecrep/eqm/
tags:
  - name: Allotment Summary Management
    description: Allotment Controller
  - name: AncillaryEquipment Management
    description: Ancillary Controller
  - name: Batch Management
    description: Batch Controller
  - name: CPE Management
    description: CPE Controller
  - name: EquipmentModel Management
    description: Equipment Model Controller
  - name: File Configuration API
    description: File Configuration Controller
  - name: Importer Management
    description: Importer Controller
  - name: Inventory Pool API
    description: Inventory Pool Controller
  - name: Job API
    description: Job Controller
  - name: Job Configuration API
    description: Job Configuration Controller
  - name: Plmn Management
    description: Plmn Controller
  - name: Provider Management
    description: Provider Controller
  - name: SIM Card Generation Configuration API
    description: Sim Card Generation Configuration Controller
  - name: Sequence Management
    description: Sequence Controller
  - name: SimCard Management
    description: Sim Card Controller
  - name: Statistics API
    description: Stats Controller
  - name: Warehouse Management
    description: Warehouse Controller
  - name: enum-controller
    description: Enum Controller
paths:
  /api/v1/private/auth/job/configuration:
    get:
      tags:
        - Job Configuration API
      summary: Search Job Configurations
      operationId: searchJobConfigurations
      produces:
        - '*/*'
      parameters:
        - name: enabled
          in: query
          required: false
          type: boolean
        - name: operation
          in: query
          required: false
          type: string
          enum:
            - AUDIT_CLEAN
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: Configuration found
          schema:
            $ref: '#/definitions/PageOfJobConfigurationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    post:
      tags:
        - Job Configuration API
      summary: Add new job configuration
      operationId: addJobConfiguration
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/JobConfigurationDTO'
      responses:
        '200':
          description: Configuration added
          schema:
            $ref: '#/definitions/JobConfigurationDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /api/v1/private/auth/job/configuration/{id}:
    get:
      tags:
        - Job Configuration API
      summary: Returns Job Configuration by id
      operationId: getJobConfigurationById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Configuration found
          schema:
            $ref: '#/definitions/JobConfigurationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - Job Configuration API
      summary: Delete job configuration
      operationId: deleteJobConfiguration
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Configuration deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Configuration not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    patch:
      tags:
        - Job Configuration API
      summary: Patch job configuration
      operationId: updateJobConfiguration
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/JobConfigurationDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Configuration found
          schema:
            $ref: '#/definitions/JobConfigurationDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /api/v1/private/auth/job/history:
    get:
      tags:
        - Job API
      summary: 'Search jobHistory by parameters, default: getAll'
      operationId: search
      produces:
        - '*/*'
      parameters:
        - name: end
          in: query
          description: Ending date of job
          required: false
          type: string
          format: date-time
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: start
          in: query
          description: Starting date of job
          required: false
          type: string
          format: date-time
        - name: status
          in: query
          description: Status of job
          required: false
          type: string
          x-example: COMPLETED
          enum:
            - COMPLETED
            - FAILED
            - STARTED
      responses:
        '200':
          description: Job history found
          schema:
            $ref: '#/definitions/PageOfBaseJobHistory'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /api/v1/private/auth/sequences/{type}:
    get:
      tags:
        - Sequence Management
      summary: Get all sequences by type
      operationId: getAllSequencesByType
      produces:
        - '*/*'
      parameters:
        - name: type
          in: path
          description: type
          required: true
          type: string
          enum:
            - BATCHNUMBER
            - ICCID
            - MSIN
      responses:
        '200':
          description: sequences found
          schema:
            type: array
            items:
              $ref: '#/definitions/SequenceResponseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    post:
      tags:
        - Sequence Management
      summary: Add a sequence addSequence for MSIN or ICCID
      operationId: addSequence for MSIN or ICCID
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: sequenceDTO
          description: sequenceDTO
          required: true
          schema:
            $ref: '#/definitions/SequenceDTO'
        - name: type
          in: path
          description: type
          required: true
          type: string
          enum:
            - BATCHNUMBER
            - ICCID
            - MSIN
      responses:
        '201':
          description: sequence created
          schema:
            $ref: '#/definitions/SequenceDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - Sequence Management
      summary: Delete sequence MSIN or ICCID by its type and value
      operationId: delete a sequence
      produces:
        - '*/*'
      parameters:
        - in: body
          name: sequenceDTO
          description: sequenceDTO
          required: true
          schema:
            $ref: '#/definitions/SequenceDTO'
        - name: type
          in: path
          description: type
          required: true
          type: string
          enum:
            - BATCHNUMBER
            - ICCID
            - MSIN
      responses:
        '204':
          description: No Content
        '400':
          description: sequence cannot be deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: sequence does not exist
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/allotments:
    get:
      tags:
        - Allotment Summary Management
      summary: Get all Allotments
      operationId: getAllUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Allotments for the batch found
          schema:
            $ref: '#/definitions/PageOfAllotmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - Allotment Summary Management
      summary: Add Allotment
      operationId: addUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allotmentDTO
          description: allotmentDTO
          required: true
          schema:
            $ref: '#/definitions/AllotmentRequestDTO'
      responses:
        '201':
          description: Allotment created
          schema:
            $ref: '#/definitions/AllotmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/allotments/batch/{batchNumber}:
    get:
      tags:
        - Allotment Summary Management
      summary: Find all Allotment in a batch
      operationId: getByBatchNumberUsingGET
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Allotments for the batch found
          schema:
            $ref: '#/definitions/PageOfAllotmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
      security:
        - OAuth2: []
  /private/auth/allotments/export:
    post:
      tags:
        - Allotment Summary Management
      summary: Generate SIM Packaging File
      operationId: exportUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/AllotmentExportRequestDTO'
      responses:
        '200':
          description: Packaging File returned
          schema:
            $ref: '#/definitions/ByteArrayResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/allotments/{id}:
    get:
      tags:
        - Allotment Summary Management
      summary: Find Allotment by Id
      operationId: getByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Allotment found
          schema:
            $ref: '#/definitions/AllotmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
      security:
        - OAuth2: []
  /private/auth/allotments/{id}/provisioned:
    post:
      tags:
        - Allotment Summary Management
      summary: Provisioned Allotment
      operationId: provisionedUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/AllotmentProvisionedDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '201':
          description: Allotment provisioned
          schema:
            $ref: '#/definitions/AllotmentDTO'
        '400':
          description: Validation failure, e.g. id or quantity incorrect
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Data entity not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Get all ancillaryEquipments
      operationId: getAllAncillaryEquipment
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfAncillaryEquipmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - AncillaryEquipment Management
      summary: Add a Ancillary Equipment
      operationId: addAncillaryEquipment
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ancillaryEquipmentDTO
          description: ancillaryEquipmentDTO
          required: true
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTOReq'
      responses:
        '201':
          description: Ancillary Equipment created
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/export:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Export ancillaryEquipment as excel file
      operationId: exporter
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          required: false
          type: string
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: batchNumber
          in: query
          required: false
          type: integer
          format: int64
        - name: equipment
          in: query
          description: If the ancillary is paired to an equipment
          required: false
          type: boolean
        - name: equipmentName
          in: query
          required: false
          type: string
          x-example: ONT
          enum:
            - BRDBOX
            - HDD
            - ONT
            - STB
        - name: externalNumber
          in: query
          description: Search by externla number
          required: false
          type: string
          x-example: '7612200000000'
        - name: independent
          in: query
          description: If the ancillary equipment is independent
          required: false
          type: boolean
        - name: macAddress
          in: query
          required: false
          type: string
          x-example: 6C:99:61:00:02:01
        - name: modelName
          in: query
          required: false
          type: string
          x-example: Wise-10G-Fibre
        - name: nature
          in: query
          description: Equipment nature
          required: false
          type: string
          enum:
            - ADDITIONAL
            - MAIN
        - name: order
          in: query
          description: If the ancillary equipment has an order ID
          required: false
          type: boolean
        - name: orderId
          in: query
          description: Order ID
          required: false
          type: string
          x-example: 0VWG0R4N
        - name: pairedEquipmentId
          in: query
          description: Internal ID of the related paired equipment
          required: false
          type: integer
          format: int64
          x-example: 1
        - name: provider
          in: query
          description: Name of the related provider
          required: false
          type: string
          x-example: Sagemcom
        - name: serialNumber
          in: query
          required: false
          type: string
          x-example: GFAB02600017
        - name: serviceId
          in: query
          description: If the ancillary equipment has a service ID
          required: false
          type: integer
          format: int64
          x-example: 0
        - name: sfpVersion
          in: query
          description: If the ancillary equipment has a given sfpVersion
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
          enum:
            - ACTIVATED
            - ASSIGNED
            - AVAILABLE
            - BOOKED
            - DEACTIVATED
            - DEPRECATED
            - FINAL
            - INSTORE
            - NOTRETURNED
            - ONHOLD
            - REPACKAGING
            - RETURNED
        - name: warehouse
          in: query
          description: Name of the related warehouse
          required: false
          type: string
          x-example: Monaco Telecom Entreprise
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ByteArrayResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/pairedEquipment/{serialNumber}:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Get a Ancillary Equipment by paired equipment serial
      operationId: getAncillaryEquipmentByPairedEquipmentSerial
      produces:
        - '*/*'
      parameters:
        - name: serialNumber
          in: path
          description: serialNumber
          required: true
          type: string
      responses:
        '200':
          description: AncillaryEquipment found
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/search:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Search a AncillaryEquipment by code,...
      operationId: searchAncillaryEquipment
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          required: false
          type: string
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: batchNumber
          in: query
          required: false
          type: integer
          format: int64
        - name: equipment
          in: query
          description: If the ancillary is paired to an equipment
          required: false
          type: boolean
        - name: equipmentName
          in: query
          required: false
          type: string
          x-example: ONT
          enum:
            - BRDBOX
            - HDD
            - ONT
            - STB
        - name: externalNumber
          in: query
          description: Search by externla number
          required: false
          type: string
          x-example: '7612200000000'
        - name: independent
          in: query
          description: If the ancillary equipment is independent
          required: false
          type: boolean
        - name: macAddress
          in: query
          required: false
          type: string
          x-example: 6C:99:61:00:02:01
        - name: modelName
          in: query
          required: false
          type: string
          x-example: Wise-10G-Fibre
        - name: nature
          in: query
          description: Equipment nature
          required: false
          type: string
          enum:
            - ADDITIONAL
            - MAIN
        - name: order
          in: query
          description: If the ancillary equipment has an order ID
          required: false
          type: boolean
        - name: orderId
          in: query
          description: Order ID
          required: false
          type: string
          x-example: 0VWG0R4N
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: pairedEquipmentId
          in: query
          description: Internal ID of the related paired equipment
          required: false
          type: integer
          format: int64
          x-example: 1
        - name: provider
          in: query
          description: Name of the related provider
          required: false
          type: string
          x-example: Sagemcom
        - name: serialNumber
          in: query
          required: false
          type: string
          x-example: GFAB02600017
        - name: serviceId
          in: query
          description: If the ancillary equipment has a service ID
          required: false
          type: integer
          format: int64
          x-example: 0
        - name: sfpVersion
          in: query
          description: If the ancillary equipment has a given sfpVersion
          required: false
          type: string
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
          enum:
            - ACTIVATED
            - ASSIGNED
            - AVAILABLE
            - BOOKED
            - DEACTIVATED
            - DEPRECATED
            - FINAL
            - INSTORE
            - NOTRETURNED
            - ONHOLD
            - REPACKAGING
            - RETURNED
        - name: warehouse
          in: query
          description: Name of the related warehouse
          required: false
          type: string
          x-example: Monaco Telecom Entreprise
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfAncillaryEquipmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/serialnumber/{serialNumber}:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Get a Ancillary Equipment by serial number
      operationId: getAncillaryEquipmentBySerialNumber
      produces:
        - '*/*'
      parameters:
        - name: serialNumber
          in: path
          description: serialNumber
          required: true
          type: string
      responses:
        '200':
          description: AncillaryEquipment found
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/{id}:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Find a Ancillary Equipment by Id
      operationId: getAncillaryEquipmentById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: AncillaryEquipment found
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    put:
      tags:
        - AncillaryEquipment Management
      summary: Update an AncillaryEquipment
      operationId: updateAncillaryEquipment
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ancillaryEquipmentUpdateDTO
          description: ancillaryEquipmentUpdateDTO
          required: true
          schema:
            $ref: '#/definitions/AncillaryEquipmentUpdateDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: AncillaryEquipment updated
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - AncillaryEquipment Management
      summary: Delete a AncillaryEquipment by id
      operationId: deleteAncillaryEquipmentById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
    patch:
      tags:
        - AncillaryEquipment Management
      summary: Partial update of an AncillaryEquipment
      operationId: partialUpdateAncillaryEquipment
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ancillaryEquipmentUpdateDTO
          description: ancillaryEquipmentUpdateDTO
          required: true
          schema:
            $ref: '#/definitions/AncillaryEquipmentUpdateDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: AncillaryEquipment updated
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/{id}/revisions:
    get:
      tags:
        - AncillaryEquipment Management
      summary: Find ancillary equipment revisions by Id
      operationId: getAncillaryEquipmentRevisionsById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Revisions page
          schema:
            $ref: '#/definitions/PagedModelOfRevisionDTOOfAncillaryEquipmentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/ancillaryequipments/{id}/{event}:
    patch:
      tags:
        - AncillaryEquipment Management
      summary: Update ancillary equipment state by internal ID or serial number
      operationId: changeAncillaryEquipmentState
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: equipmentChangeStateDTO
          description: equipmentChangeStateDTO
          required: true
          schema:
            $ref: '#/definitions/AncillaryEquipmentChangeStateDTO'
        - name: event
          in: path
          description: event
          required: true
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AncillaryEquipmentDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/batch:
    get:
      tags:
        - Batch Management
      summary: Get all batches
      operationId: getAllBatches
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageOfBatchDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - Batch Management
      summary: Create a new batch
      operationId: createBatch
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: createBatchRequestDTO
          description: createBatchRequestDTO
          required: true
          schema:
            $ref: '#/definitions/CreateBatchRequestDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BatchDTO'
        '201':
          description: Batch has been successfully created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/batch/search:
    get:
      tags:
        - Batch Management
      summary: Search batches by several fields
      operationId: searchBatch
      produces:
        - '*/*'
      parameters:
        - name: configurationName
          in: query
          required: false
          type: string
        - name: exportFileName
          in: query
          required: false
          type: string
        - name: importFileName
          in: query
          required: false
          type: string
        - name: inventoryPoolCode
          in: query
          required: false
          type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: processable
          in: query
          required: false
          type: boolean
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageOfBatchDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/batch/{batchNumber}:
    get:
      tags:
        - Batch Management
      summary: Get single batch by batch number
      operationId: getBatch
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BatchDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    delete:
      tags:
        - Batch Management
      summary: Delete batch by batch number, along with its related SIMs
      operationId: deleteBatch
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/batch/{batchNumber}/download-import:
    get:
      tags:
        - Batch Management
      summary: Download import file from the server, for a specific batch
      operationId: downloadImportFile
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Import file has been successfully downloaded from the server
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Related batch could not be found for this batch number, or file not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/batch/{batchNumber}/export:
    post:
      tags:
        - Batch Management
      summary: Export a SIM card manufacturing request
      operationId: exportSIMCard
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
        - in: body
          name: generateSimCardsRequestDTO
          description: generateSimCardsRequestDTO
          required: true
          schema:
            $ref: '#/definitions/GenerateSimCardsRequestDTO'
      responses:
        '200':
          description: SIM cards exported for manufacturing
          schema:
            $ref: '#/definitions/GenerateSimCardsResponseDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/batch/{batchNumber}/process:
    patch:
      tags:
        - Batch Management
      summary: Set the processed date a a Batch to the current time
      operationId: setProcessedDate
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BatchDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/batch/{batchNumber}/return:
    patch:
      tags:
        - Batch Management
      summary: Set the returned date a a Batch to the current time
      operationId: setReturnedDate
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BatchDTO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/batch/{batchNumber}/upload-import:
    post:
      tags:
        - Batch Management
      summary: Upload import file on the server, when returned by provider
      operationId: uploadImportFile
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
        - name: file
          in: formData
          required: false
          type: file
      responses:
        '201':
          description: Import file has been successfully uploaded on the server
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Related batch could not be found for this batch number.
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/cpes:
    get:
      tags:
        - CPE Management
      summary: Get all cpes
      operationId: getAllCpes
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfCPEDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - CPE Management
      summary: Add a CPE
      operationId: addCpe
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cpedto
          description: cpedto
          required: true
          schema:
            $ref: '#/definitions/CPEDTOReq'
      responses:
        '201':
          description: CPE created
          schema:
            $ref: '#/definitions/CPEDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/cpes/equipmentIdsIn:
    post:
      tags:
        - CPE Management
      summary: Find CPEs by IDs inside a given list of ids
      operationId: getIdsIn
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: ids
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: CPEs found
          schema:
            $ref: '#/definitions/PageOfCpeUnmProjection'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/cpes/export:
    get:
      tags:
        - CPE Management
      summary: Export cpe as excel file
      operationId: export
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          required: false
          type: string
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: batchNumber
          in: query
          description: Batch number
          required: false
          type: string
          x-example: '1'
        - name: externalNumber
          in: query
          required: false
          type: string
          x-example: '7612205998872'
        - name: hwVersion
          in: query
          required: false
          type: string
          x-example: XGSR1647
        - name: macAddress4G
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:F1
        - name: macAddress5G
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:F2
        - name: macAddressCpe
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:E1
        - name: macAddressLan
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:F1
        - name: macAddressRouter
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:E0
        - name: macAddressVoip
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:E3
        - name: modelName
          in: query
          required: false
          type: string
          x-example: Fibre Box X6 Black
        - name: nature
          in: query
          required: false
          type: string
          enum:
            - ADDITIONAL
            - MAIN
        - name: order
          in: query
          description: If the CPE has an orderId
          required: false
          type: boolean
        - name: orderId
          in: query
          description: Order ID
          required: false
          type: string
          x-example: '2'
        - name: provider
          in: query
          description: Name of the related provider
          required: false
          type: string
          x-example: Sagemcom
        - name: serialNumber
          in: query
          required: false
          type: string
          x-example: GFAB02600017
        - name: service
          in: query
          required: false
          type: boolean
        - name: serviceId
          in: query
          description: Service ID
          required: false
          type: string
          x-example: '3'
        - name: status
          in: query
          required: false
          type: string
          enum:
            - ACTIVATED
            - ASSIGNED
            - AVAILABLE
            - BOOKED
            - DEACTIVATED
            - DEPRECATED
            - FINAL
            - INSTORE
            - NOTRETURNED
            - ONHOLD
            - REPACKAGING
            - RETURNED
        - name: warehouse
          in: query
          description: Name of the related warehouse
          required: false
          type: string
          x-example: Monaco Telecom Entreprise
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ByteArrayResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/cpes/search:
    get:
      tags:
        - CPE Management
      summary: Search a CPE by code,...
      operationId: searchCpe
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          required: false
          type: string
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: batchNumber
          in: query
          description: Batch number
          required: false
          type: string
          x-example: '1'
        - name: externalNumber
          in: query
          required: false
          type: string
          x-example: '7612205998872'
        - name: hwVersion
          in: query
          required: false
          type: string
          x-example: XGSR1647
        - name: macAddress4G
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:F1
        - name: macAddress5G
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:F2
        - name: macAddressCpe
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:E1
        - name: macAddressLan
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:F1
        - name: macAddressRouter
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:E0
        - name: macAddressVoip
          in: query
          required: false
          type: string
          x-example: 7C:99:61:00:02:E3
        - name: modelName
          in: query
          required: false
          type: string
          x-example: Fibre Box X6 Black
        - name: nature
          in: query
          required: false
          type: string
          enum:
            - ADDITIONAL
            - MAIN
        - name: order
          in: query
          description: If the CPE has an orderId
          required: false
          type: boolean
        - name: orderId
          in: query
          description: Order ID
          required: false
          type: string
          x-example: '2'
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: provider
          in: query
          description: Name of the related provider
          required: false
          type: string
          x-example: Sagemcom
        - name: serialNumber
          in: query
          required: false
          type: string
          x-example: GFAB02600017
        - name: service
          in: query
          required: false
          type: boolean
        - name: serviceId
          in: query
          description: Service ID
          required: false
          type: string
          x-example: '3'
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
          enum:
            - ACTIVATED
            - ASSIGNED
            - AVAILABLE
            - BOOKED
            - DEACTIVATED
            - DEPRECATED
            - FINAL
            - INSTORE
            - NOTRETURNED
            - ONHOLD
            - REPACKAGING
            - RETURNED
        - name: warehouse
          in: query
          description: Name of the related warehouse
          required: false
          type: string
          x-example: Monaco Telecom Entreprise
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfCPEDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/cpes/{id}:
    get:
      tags:
        - CPE Management
      summary: Find a CPE by ID
      operationId: getCpeById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: CPE found
          schema:
            $ref: '#/definitions/CPEDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    put:
      tags:
        - CPE Management
      summary: Update a CPE
      operationId: updateCpe
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cpePatchDto
          description: cpePatchDto
          required: true
          schema:
            $ref: '#/definitions/CPEPatchDto'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: CPE updated
          schema:
            $ref: '#/definitions/CPEDTORes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - CPE Management
      summary: Delete a CPE by id
      operationId: deleteCpeById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
    patch:
      tags:
        - CPE Management
      summary: Partial update a CPE
      operationId: partialUpdateCpe
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cpePatchDto
          description: cpePatchDto
          required: true
          schema:
            $ref: '#/definitions/CPEPatchDto'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: CPE updated
          schema:
            $ref: '#/definitions/CPEDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/cpes/{id}/revisions:
    get:
      tags:
        - CPE Management
      summary: Find cpe revisions by Id
      operationId: getCpeRevisionsById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Revisions page
          schema:
            $ref: '#/definitions/PagedModelOfRevisionDTOOfCPEDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/cpes/{id}/{event}:
    patch:
      tags:
        - CPE Management
      summary: 'Update cpe state : instore, book, ...'
      operationId: changeCpeState
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changeStateDTO
          description: changeStateDTO
          required: true
          schema:
            $ref: '#/definitions/ChangeStatusDto'
        - name: event
          in: path
          description: event
          required: true
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CPEDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/equipmentModels:
    get:
      tags:
        - EquipmentModel Management
      summary: Get equipment models
      operationId: getEquipmentModels
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: Equipment models retrieved
          schema:
            $ref: '#/definitions/PageOfEquipmentModelDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    post:
      tags:
        - EquipmentModel Management
      summary: Create an equipment model
      operationId: createEquipmentModel
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: equipmentModelDTO
          description: equipmentModelDTO
          required: true
          schema:
            $ref: '#/definitions/EquipmentModelCreateDTO'
      responses:
        '201':
          description: Equipment model created
          schema:
            $ref: '#/definitions/EquipmentModelDTO'
        '400':
          description: There is an error with the given parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Some of the required objects were not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/equipmentModels/{id}:
    get:
      tags:
        - EquipmentModel Management
      summary: Find a equipmentModel by Id
      operationId: getEquipmentModelById
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Equipment model retrieved
          schema:
            $ref: '#/definitions/EquipmentModelDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Equipment model not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    put:
      tags:
        - EquipmentModel Management
      summary: Update an equipment model by Id
      operationId: updateEquipmentModel
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: equipmentModelCreateDTO
          description: equipmentModelCreateDTO
          required: true
          schema:
            $ref: '#/definitions/EquipmentModelCreateDTO'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Equipment model updated
          schema:
            $ref: '#/definitions/EquipmentModelDTO'
        '201':
          description: Created
        '400':
          description: There is an error with the given parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Some of the required objects were not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - EquipmentModel Management
      summary: Delete an equipment model by Id
      operationId: deleteEquipmentModel
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Equipment model deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Equipment model not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/equipmentsDashboard:
    get:
      tags:
        - Statistics API
      summary: Collect statistics for the equipments dashboard
      operationId: equipmentsDashboard
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '201':
          description: Statistics collected
          schema:
            $ref: '#/definitions/EquipmentsStatsDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/fileConfiguration:
    get:
      tags:
        - File Configuration API
      summary: Search File Configurations by several fields
      operationId: searchFileConfigurations
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: Name
          required: false
          type: string
          x-example: default_export
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: Matching File configurations returned
          schema:
            $ref: '#/definitions/PageOfFileConfigurationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    post:
      tags:
        - File Configuration API
      summary: Create File configuration
      operationId: createFileConfiguration
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fileConfigurationDTO
          description: fileConfigurationDTO
          required: true
          schema:
            $ref: '#/definitions/FileConfigurationDTO'
      responses:
        '201':
          description: File configuration created
          schema:
            $ref: '#/definitions/FileConfigurationDTO'
        '400':
          description: File configuration cannot be created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/fileConfiguration/{name}:
    get:
      tags:
        - File Configuration API
      summary: Get File configuration by name
      operationId: getFileConfigurationByName
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: File configuration returned
          schema:
            $ref: '#/definitions/FileConfigurationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: File configuration does not exist
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - File Configuration API
      summary: Delete File configuration by code
      operationId: deleteFileConfigurationByName
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '204':
          description: File configuration returned
        '400':
          description: File configuration cannot be deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: File configuration does not exist
        '500':
          description: Internal error
      security:
        - OAuth2: []
    patch:
      tags:
        - File Configuration API
      summary: Partial update File configuration
      operationId: updateFileConfiguration
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fileConfigurationDto
          description: fileConfigurationDto
          required: true
          schema:
            $ref: '#/definitions/UpdateFileConfigurationDTO'
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: File configuration updated
          schema:
            $ref: '#/definitions/FileConfigurationDTO'
        '204':
          description: No Content
        '400':
          description: File configuration cannot be updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/import/history/last:
    delete:
      tags:
        - Importer Management
      summary: Delete the last import history
      operationId: deleteLastUsingDELETE
      produces:
        - '*/*'
      responses:
        '204':
          description: Import history successfully deleted
        '400':
          description: Input error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/import/history/search:
    get:
      tags:
        - Importer Management
      summary: Search existing import histories
      operationId: searchUsingGET
      produces:
        - '*/*'
      parameters:
        - name: endDate
          in: query
          description: Ending date of the searched import
          required: false
          type: string
        - name: fileName
          in: query
          description: File name of the searched import
          required: false
          type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
        - name: startDate
          in: query
          description: Starting date of the searched import
          required: false
          type: string
        - name: status
          in: query
          description: Status of the searched import
          required: false
          type: string
          enum:
            - ABORTED
            - COMPLETED
            - STARTED
      responses:
        '200':
          description: Import histories matching the criteria successfully returned
          schema:
            $ref: '#/definitions/PageOfImportHistoryDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/import/history/{id}:
    get:
      tags:
        - Importer Management
      summary: Get an existing import history by its internal ID
      operationId: getByIdUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Import history successfully returned
          schema:
            $ref: '#/definitions/ImportHistoryDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Import history not found
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/import/{entity}/start:
    post:
      tags:
        - Importer Management
      summary: Launch a new import
      operationId: uploadFileHandlerUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: file
          in: formData
          required: false
          type: file
        - name: entity
          in: path
          description: entity
          required: true
          type: string
      responses:
        '200':
          description: Import successfully launched
          schema:
            $ref: '#/definitions/ImportHistoryDTO'
        '201':
          description: Created
        '400':
          description: Input error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/inventorypools:
    get:
      tags:
        - Inventory Pool API
      summary: Search Inventory Pools by several fields
      operationId: searchInventoryPool
      produces:
        - '*/*'
      parameters:
        - name: code
          in: query
          required: false
          type: string
          x-example: EPIC_PREPAY_POOL
        - name: mvno
          in: query
          required: false
          type: integer
          format: int32
          x-example: 1
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: simProfile
          in: query
          required: false
          type: string
          x-example: REPLACEMENT
          enum:
            - DEFAULT
            - REPLACEMENT
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: Matching Inventory Pools returned
          schema:
            $ref: '#/definitions/PageOfInventoryPoolDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    post:
      tags:
        - Inventory Pool API
      summary: Create Inventory Pool
      operationId: createInventoryPool
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: inventoryPoolDTO
          description: inventoryPoolDTO
          required: true
          schema:
            $ref: '#/definitions/InventoryPoolDTOReq'
      responses:
        '201':
          description: Inventory Pool created
          schema:
            $ref: '#/definitions/InventoryPoolDTORes'
        '400':
          description: Inventory Pool cannot be created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/inventorypools/{code}:
    get:
      tags:
        - Inventory Pool API
      summary: Get Inventory Pool by code
      operationId: getInventoryPoolByCode
      produces:
        - '*/*'
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: Inventory Pool returned
          schema:
            $ref: '#/definitions/InventoryPoolDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Inventory Pool does not exist
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - Inventory Pool API
      summary: Delete Inventory Pool by code
      operationId: deleteInventoryPoolByCode
      produces:
        - '*/*'
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
    patch:
      tags:
        - Inventory Pool API
      summary: Partial update Inventory Pool
      operationId: updateInventoryPool
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
        - in: body
          name: inventoryPoolDTO
          description: inventoryPoolDTO
          required: true
          schema:
            $ref: '#/definitions/UpdateInventoryPoolDTO'
      responses:
        '200':
          description: Inventory Pool updated
          schema:
            $ref: '#/definitions/InventoryPoolDTORes'
        '204':
          description: No Content
        '400':
          description: Inventory Pool cannot be updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/plmns:
    get:
      tags:
        - Plmn Management
      summary: Get all plmns
      operationId: getAllPlmns
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfPlmnDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - Plmn Management
      summary: Add a PLMN
      operationId: addPlmn
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: plmnDTO
          description: plmnDTO
          required: true
          schema:
            $ref: '#/definitions/PlmnDTOReq'
      responses:
        '201':
          description: PLMN created
          schema:
            $ref: '#/definitions/PlmnDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/plmns/search:
    get:
      tags:
        - Plmn Management
      summary: Search a PLMN by code,partial of rangesPrefix
      operationId: searchPlmn
      produces:
        - '*/*'
      parameters:
        - name: code
          in: query
          description: Code
          required: false
          type: string
          x-example: '20202'
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: prefix
          in: query
          description: Prefix
          required: false
          type: string
          x-example: '3368900890254'
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: PLMN returned
          schema:
            $ref: '#/definitions/PagedModelOfPlmnDTO'
        '400':
          description: No PLMN has been found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/plmns/{plmnId}:
    get:
      tags:
        - Plmn Management
      summary: Find a PLMN by Id
      operationId: getPlmnById
      produces:
        - '*/*'
      parameters:
        - name: plmnId
          in: path
          description: plmnId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: PLMN found
          schema:
            $ref: '#/definitions/PlmnDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    put:
      tags:
        - Plmn Management
      summary: Update a PLMN
      operationId: updatePlmn
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: plmnDTO
          description: plmnDTO
          required: true
          schema:
            $ref: '#/definitions/PlmnDTOReq'
        - name: plmnId
          in: path
          description: plmnId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: PLMN updated
          schema:
            $ref: '#/definitions/PlmnDTORes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - Plmn Management
      summary: Delete a PLMN by id
      operationId: deletePlmnById
      produces:
        - '*/*'
      parameters:
        - name: plmnId
          in: path
          description: plmnId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/providers:
    get:
      tags:
        - Provider Management
      summary: Get all providers
      operationId: getAllProvider
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfProviderDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - Provider Management
      summary: Add a provider
      operationId: addProvider
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: providerDTO
          description: providerDTO
          required: true
          schema:
            $ref: '#/definitions/ProviderDTOReq'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProviderDTORes'
        '204':
          description: provider created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/providers/search:
    get:
      tags:
        - Provider Management
      summary: Search a provider by code, accesstype,...
      operationId: searchProvider
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          description: Access Type
          required: false
          type: string
          x-example: FREEDHOME
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: name
          in: query
          description: Name
          required: false
          type: string
          x-example: Gemalto
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfProviderDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/providers/{providerId}:
    get:
      tags:
        - Provider Management
      summary: Find a provider by Id
      operationId: getProviderById
      produces:
        - '*/*'
      parameters:
        - name: providerId
          in: path
          description: providerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: provider found
          schema:
            $ref: '#/definitions/ProviderDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    put:
      tags:
        - Provider Management
      summary: Update a warehouse
      operationId: updateProvider
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: providerDTO
          description: providerDTO
          required: true
          schema:
            $ref: '#/definitions/ProviderDTOReq'
        - name: providerId
          in: path
          description: providerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: warehouse updated
          schema:
            $ref: '#/definitions/ProviderDTORes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - Provider Management
      summary: Delete a provider by id
      operationId: deleteProviderById
      produces:
        - '*/*'
      parameters:
        - name: providerId
          in: path
          description: providerId
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simGenerationConfigurations:
    get:
      tags:
        - SIM Card Generation Configuration API
      summary: Search a SIM Card Generation Configuration by several fields
      operationId: searchSCGC
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: Name
          required: false
          type: string
          x-example: METEOR_PAIRED
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
        - name: transportKey
          in: query
          description: Transport Key
          required: false
          type: integer
          format: int32
          x-example: 5
      responses:
        '200':
          description: Matching configurations returned
          schema:
            $ref: '#/definitions/PageOfSimCardGenerationConfigurationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    post:
      tags:
        - SIM Card Generation Configuration API
      summary: Create SIM Card generation configuration
      operationId: createSimCardGenerationConfiguration
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: simCardGenerationConfigurationDTO
          description: simCardGenerationConfigurationDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardGenerationConfigurationDTOReq'
      responses:
        '201':
          description: SIM Card generation configuration created
          schema:
            $ref: '#/definitions/SimCardGenerationConfigurationDTORes'
        '400':
          description: SIM Card generation configuration cannot be created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/simGenerationConfigurations/{name}:
    get:
      tags:
        - SIM Card Generation Configuration API
      summary: Get SIM Card generation configuration by name
      operationId: getSimCardGenerationConfigurationByName
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: SIM Card generation configuration returned
          schema:
            $ref: '#/definitions/SimCardGenerationConfigurationDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: SIM Card generation configuration does not exist
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - SIM Card Generation Configuration API
      summary: Delete SIM Card generation configuration by code
      operationId: deleteSimCardGenerationConfigurationByName
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '204':
          description: SIM Card generation configuration returned
        '400':
          description: SIM Card generation configuration cannot be deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: SIM Card generation configuration does not exist
        '500':
          description: Internal error
      security:
        - OAuth2: []
    patch:
      tags:
        - SIM Card Generation Configuration API
      summary: Partial update SIM Card generation configuration
      operationId: updateSimCardGenerationConfiguration
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
        - in: body
          name: simCardGenerationConfigurationDTO
          description: simCardGenerationConfigurationDTO
          required: true
          schema:
            $ref: '#/definitions/UpdateSimCardGenerationConfigurationDTO'
      responses:
        '200':
          description: SIM Card generation configuration updated
          schema:
            $ref: '#/definitions/SimCardGenerationConfigurationDTORes'
        '204':
          description: No Content
        '400':
          description: SIM Card generation configuration cannot be updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/simcards:
    get:
      tags:
        - SimCard Management
      summary: Get all simcards
      operationId: getAllUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfSimCardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - SimCard Management
      summary: Add a simcard
      operationId: addUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: simCardDto
          description: simCardDto
          required: true
          schema:
            $ref: '#/definitions/SimCardDTOReq'
      responses:
        '201':
          description: SIM Card created
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/simcards/export:
    get:
      tags:
        - SimCard Management
      summary: Export of simcard as excel file
      operationId: exportUsingGET
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          required: false
          type: string
          x-example: DOCSIS
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: allotmentId
          in: query
          description: Allotment ID
          required: false
          type: string
          x-example: '345'
        - name: batchNumber
          in: query
          description: Batch Number
          required: false
          type: string
          x-example: '15'
        - name: esim
          in: query
          description: If the given sim is an eSim
          required: false
          type: boolean
        - name: externalNumber
          in: query
          required: false
          type: string
          x-example: '37799900001'
        - name: imsi
          in: query
          description: International Mobile Subscriber Identity
          required: false
          type: string
          x-example: '280101434046576'
        - name: imsisn
          in: query
          description: IMSI Sponsor Number
          required: false
          type: string
          x-example: '280101434046576'
        - name: inventoryPoolCode
          in: query
          description: Inventory Pool Code
          required: false
          type: string
          x-example: EPIC_PREPAY_POOL
        - name: inventoryPoolId
          in: query
          description: Inventory Pool ID
          required: false
          type: string
          x-example: '478'
        - name: nature
          in: query
          required: false
          type: string
          x-example: MAIN
          enum:
            - ADDITIONAL
            - MAIN
        - name: number
          in: query
          description: Phone number
          required: false
          type: string
          x-example: '33678630000'
        - name: order
          in: query
          description: If the SIM Card is associated to an Order
          required: false
          type: boolean
        - name: orderId
          in: query
          description: Related Order Id
          required: false
          type: string
          x-example: 1NEKD9NJ
        - name: packId
          in: query
          description: Pack ID
          required: false
          type: string
          x-example: '789541'
        - name: pin1Code
          in: query
          description: pin1 code related to simcard
          required: false
          type: string
          pattern: ^([0-9A-F]{4})$
          x-example: '2989'
        - name: pin2Code
          in: query
          description: pin2 code related to simcard
          required: false
          type: string
          x-example: '4365'
        - name: plmnCode
          in: query
          required: false
          type: string
        - name: preactivated
          in: query
          description: If the SIM Card is preactivated
          required: false
          type: boolean
        - name: provider
          in: query
          description: Related Provider name
          required: false
          type: string
          x-example: Gemalto
        - name: psn
          in: query
          description: ICCID of the related equipment
          required: false
          type: string
          x-example: '8935743411209230267'
        - name: puk1Code
          in: query
          description: puk1 code related to simcard
          required: false
          type: string
          pattern: ^([0-9A-F]{8})$
          x-example: '58965684'
        - name: puk2Code
          in: query
          description: puk2 code related to simcard
          required: false
          type: string
          pattern: ^([0-9A-F]{8})$
          x-example: '29792397'
        - name: service
          in: query
          description: If the SIM Card is associated to a service
          required: false
          type: boolean
        - name: serviceId
          in: query
          description: Related Service Id
          required: false
          type: string
          x-example: '789'
        - name: simProfile
          in: query
          description: sim_profile
          required: false
          type: string
          enum:
            - DEFAULT
            - REPLACEMENT
        - name: sn
          in: query
          description: Serial number (ICCID)
          required: false
          type: string
          x-example: '8935743411196513071'
        - name: status
          in: query
          required: false
          type: string
          x-example: DEACTIVATED
          enum:
            - ACTIVATED
            - ASSIGNED
            - AVAILABLE
            - BOOKED
            - DEACTIVATED
            - DEPRECATED
            - FINAL
            - INSTORE
            - NOTRETURNED
            - ONHOLD
            - REPACKAGING
            - RETURNED
        - name: warehouse
          in: query
          description: Related Warehouse name
          required: false
          type: string
          x-example: Monaco Telecom Entreprise
      responses:
        '200':
          description: SIMCards corresponding to the criteria have been returned
          schema:
            $ref: '#/definitions/ByteArrayResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/simcards/iccid/{iccid}:
    get:
      tags:
        - SimCard Management
      summary: Get a SIM Card by ICCID
      operationId: getByICCIDUsingGET
      produces:
        - '*/*'
      parameters:
        - name: iccid
          in: path
          description: iccid
          required: true
          type: string
      responses:
        '200':
          description: SIM Card found
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
      security:
        - OAuth2: []
  /private/auth/simcards/import/batch/{batchNumber}:
    patch:
      tags:
        - SimCard Management
      summary: Import prepay SIM cards from manufacturing file by batch number
      operationId: importFileByBatchUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: batchNumber
          in: path
          description: batchNumber
          required: true
          type: integer
          format: int64
        - name: creationTime
          in: query
          required: false
          type: integer
          format: int64
        - name: id
          in: query
          required: false
          type: string
        - name: lastAccessedTime
          in: query
          required: false
          type: integer
          format: int64
        - name: maxInactiveInterval
          in: query
          required: false
          type: integer
          format: int32
        - name: new
          in: query
          required: false
          type: boolean
        - name: valueNames
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: All SIM cards imported from manufacturing successfully
          schema:
            $ref: '#/definitions/ImportHistoryDTO'
        '204':
          description: SIM cards imported from manufacturing, partially processed
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/simcards/import/file/{importFileName}:
    patch:
      tags:
        - SimCard Management
      summary: Import prepay SIM cards from manufacturing file by import file name
      operationId: importFileByNameUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: creationTime
          in: query
          required: false
          type: integer
          format: int64
        - name: id
          in: query
          required: false
          type: string
        - name: importFileName
          in: path
          description: importFileName
          required: true
          type: string
          x-example: MMC00123.out
        - name: lastAccessedTime
          in: query
          required: false
          type: integer
          format: int64
        - name: maxInactiveInterval
          in: query
          required: false
          type: integer
          format: int32
        - name: new
          in: query
          required: false
          type: boolean
        - name: valueNames
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: All SIM cards imported from manufacturing successfully
          schema:
            $ref: '#/definitions/ImportHistoryDTO'
        '204':
          description: SIM cards imported from manufacturing, partially processed
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/simcards/imsi/{imsi}:
    get:
      tags:
        - SimCard Management
      summary: Get a SIM Card by IMSI
      operationId: getByIMSIUsingGET
      produces:
        - '*/*'
      parameters:
        - name: imsi
          in: path
          description: imsi
          required: true
          type: string
      responses:
        '200':
          description: SIM Card found
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
      security:
        - OAuth2: []
    patch:
      tags:
        - SimCard Management
      summary: Partial update by IMSI
      operationId: partialUpdateByIMSIUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: imsi
          in: path
          description: imsi
          required: true
          type: string
        - in: body
          name: simCardPatchDTO
          description: simCardPatchDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardPatchDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/imsi/{imsi}/{event}:
    patch:
      tags:
        - SimCard Management
      summary: Update simcard state by IMSI
      operationId: changeStateByImsiUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changeStateDTO
          description: changeStateDTO
          required: false
          schema:
            $ref: '#/definitions/ChangeStatusDto'
        - name: event
          in: path
          description: event
          required: true
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
        - name: imsi
          in: path
          description: imsi
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/pack:
    patch:
      tags:
        - SimCard Management
      summary: Update the pack id on a SIM card
      operationId: updatePackByIMSIUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: simCardPatchDTO
          description: simCardPatchDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardPatchDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/search:
    get:
      tags:
        - SimCard Management
      summary: Search a simcard by several fields
      operationId: searchUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: accessType
          in: query
          required: false
          type: string
          x-example: DOCSIS
          enum:
            - BBHB
            - DISE
            - DOCSIS
            - FREEDHOME
            - FTTH
            - MOBILE
            - TRUNKSIP
            - ZATTOO
        - name: allotmentId
          in: query
          description: Allotment ID
          required: false
          type: string
          x-example: '345'
        - name: batchNumber
          in: query
          description: Batch Number
          required: false
          type: string
          x-example: '15'
        - name: esim
          in: query
          description: If the given sim is an eSim
          required: false
          type: boolean
        - name: externalNumber
          in: query
          required: false
          type: string
          x-example: '37799900001'
        - name: imsi
          in: query
          description: International Mobile Subscriber Identity
          required: false
          type: string
          x-example: '280101434046576'
        - name: imsisn
          in: query
          description: IMSI Sponsor Number
          required: false
          type: string
          x-example: '280101434046576'
        - name: inventoryPoolCode
          in: query
          description: Inventory Pool Code
          required: false
          type: string
          x-example: EPIC_PREPAY_POOL
        - name: inventoryPoolId
          in: query
          description: Inventory Pool ID
          required: false
          type: string
          x-example: '478'
        - name: nature
          in: query
          required: false
          type: string
          x-example: MAIN
          enum:
            - ADDITIONAL
            - MAIN
        - name: number
          in: query
          description: Phone number
          required: false
          type: string
          x-example: '33678630000'
        - name: order
          in: query
          description: If the SIM Card is associated to an Order
          required: false
          type: boolean
        - name: orderId
          in: query
          description: Related Order Id
          required: false
          type: string
          x-example: 1NEKD9NJ
        - name: packId
          in: query
          description: Pack ID
          required: false
          type: string
          x-example: '789541'
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: pin1Code
          in: query
          description: pin1 code related to simcard
          required: false
          type: string
          pattern: ^([0-9A-F]{4})$
          x-example: '2989'
        - name: pin2Code
          in: query
          description: pin2 code related to simcard
          required: false
          type: string
          x-example: '4365'
        - name: plmnCode
          in: query
          required: false
          type: string
        - name: preactivated
          in: query
          description: If the SIM Card is preactivated
          required: false
          type: boolean
        - name: provider
          in: query
          description: Related Provider name
          required: false
          type: string
          x-example: Gemalto
        - name: psn
          in: query
          description: ICCID of the related equipment
          required: false
          type: string
          x-example: '8935743411209230267'
        - name: puk1Code
          in: query
          description: puk1 code related to simcard
          required: false
          type: string
          pattern: ^([0-9A-F]{8})$
          x-example: '58965684'
        - name: puk2Code
          in: query
          description: puk2 code related to simcard
          required: false
          type: string
          pattern: ^([0-9A-F]{8})$
          x-example: '29792397'
        - name: service
          in: query
          description: If the SIM Card is associated to a service
          required: false
          type: boolean
        - name: serviceId
          in: query
          description: Related Service Id
          required: false
          type: string
          x-example: '789'
        - name: simProfile
          in: query
          description: sim_profile
          required: false
          type: string
          enum:
            - DEFAULT
            - REPLACEMENT
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sn
          in: query
          description: Serial number (ICCID)
          required: false
          type: string
          x-example: '8935743411196513071'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
          x-example: DEACTIVATED
          enum:
            - ACTIVATED
            - ASSIGNED
            - AVAILABLE
            - BOOKED
            - DEACTIVATED
            - DEPRECATED
            - FINAL
            - INSTORE
            - NOTRETURNED
            - ONHOLD
            - REPACKAGING
            - RETURNED
        - name: warehouse
          in: query
          description: Related Warehouse name
          required: false
          type: string
          x-example: Monaco Telecom Entreprise
      responses:
        '200':
          description: SIMCards corresponding to the criteria have been returned
          schema:
            $ref: '#/definitions/PagedModelOfSimCardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal processing error
      security:
        - OAuth2: []
  /private/auth/simcards/serialNumber/{iccid}:
    patch:
      tags:
        - SimCard Management
      summary: Partial update by ICCID
      operationId: partialUpdateByICCIDUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: iccid
          in: path
          description: iccid
          required: true
          type: string
        - in: body
          name: simCardPatchDTO
          description: simCardPatchDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardPatchDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/serialNumber/{iccid}/{event}:
    patch:
      tags:
        - SimCard Management
      summary: Update simcard state by ICCID
      operationId: changeStateByICCIDUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changeStateDTO
          description: changeStateDTO
          required: false
          schema:
            $ref: '#/definitions/ChangeStatusDto'
        - name: event
          in: path
          description: event
          required: true
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
        - name: iccid
          in: path
          description: iccid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/{id}:
    get:
      tags:
        - SimCard Management
      summary: GET a SIM Card by technical ID
      operationId: getByIdUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: SIM Card found
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
      security:
        - OAuth2: []
    put:
      tags:
        - SimCard Management
      summary: Update a simcard
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: simCardPatchDTO
          description: simCardPatchDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardPatchDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    delete:
      tags:
        - SimCard Management
      summary: Delete a simcard
      operationId: deleteUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
    patch:
      tags:
        - SimCard Management
      summary: Partial update
      operationId: partialUpdateByIdUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: simCardPatchDTO
          description: simCardPatchDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardPatchDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/{id}/events:
    get:
      tags:
        - SimCard Management
      summary: Find available events for a state
      operationId: findEventsForStateUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - activate
                - assign
                - available
                - book
                - deactivate
                - depreciate
                - free
                - instore
                - onhold
                - repackage
                - rollback_activate
                - rollback_deactivate
                - rollback_onhold
                - setnotreturn
                - setreturn
                - unassign
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/simcards/{id}/pack:
    patch:
      tags:
        - SimCard Management
      summary: Update the pack id on a SIM card
      operationId: updatePackByIdUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: simCardPatchDTO
          description: simCardPatchDTO
          required: true
          schema:
            $ref: '#/definitions/SimCardPatchDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/simcards/{id}/revisions:
    get:
      tags:
        - SimCard Management
      summary: Find simcard revisions by equipment Id
      operationId: getSimCardRevisionsByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Revisions page
          schema:
            $ref: '#/definitions/PagedModelOfRevisionDTOOfSimCardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/simcards/{id}/{event}:
    patch:
      tags:
        - SimCard Management
      summary: Update simcard state by internal ID
      operationId: changeStateByIdUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changeStateDTO
          description: changeStateDTO
          required: false
          schema:
            $ref: '#/definitions/ChangeStatusDto'
        - name: event
          in: path
          description: event
          required: true
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SimCardDTORes'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /private/auth/warehouses:
    get:
      tags:
        - Warehouse Management
      summary: Get all warehouses
      operationId: getAllWarehouses
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfWarehouseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
    post:
      tags:
        - Warehouse Management
      summary: Add a warehouse
      operationId: addWarehouse
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: warehouseDTO
          description: warehouseDTO
          required: true
          schema:
            $ref: '#/definitions/WarehouseDTOReq'
      responses:
        '201':
          description: warehouse created
          schema:
            $ref: '#/definitions/WarehouseDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
  /private/auth/warehouses/search:
    get:
      tags:
        - Warehouse Management
      summary: Search a warehouse by code, code,...
      operationId: searchWarehouse
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: Name
          required: false
          type: string
          x-example: Univers Telecom
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          required: false
          type: integer
          format: int32
          x-example: 0
        - name: resellerCode
          in: query
          description: Reseller Code
          required: false
          type: string
          x-example: UTE
        - name: size
          in: query
          description: Number of records per page.
          required: false
          type: integer
          format: int32
          x-example: 10
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedModelOfWarehouseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - OAuth2: []
  /private/auth/warehouses/{warehouseId}:
    get:
      tags:
        - Warehouse Management
      summary: Find a warehouse by Id
      operationId: getWarehouseById
      produces:
        - '*/*'
      parameters:
        - name: warehouseId
          in: path
          description: warehouseId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: warehouse found
          schema:
            $ref: '#/definitions/WarehouseDTORes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    put:
      tags:
        - Warehouse Management
      summary: Update a warehouse
      operationId: updateWarehouse
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: warehouseDTO
          description: warehouseDTO
          required: true
          schema:
            $ref: '#/definitions/WarehouseDTOReq'
        - name: warehouseId
          in: path
          description: warehouseId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: warehouse updated
          schema:
            $ref: '#/definitions/WarehouseDTORes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal error
      security:
        - OAuth2: []
    delete:
      tags:
        - Warehouse Management
      summary: Delete a warehouse by id
      operationId: deleteWarehouseById
      produces:
        - '*/*'
      parameters:
        - name: warehouseId
          in: path
          description: warehouseId
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - OAuth2: []
  /public/enums/accesstype:
    get:
      tags:
        - enum-controller
      summary: Get Access Type values
      operationId: getAccessTypes
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - BBHB
                - DISE
                - DOCSIS
                - FREEDHOME
                - FTTH
                - MOBILE
                - TRUNKSIP
                - ZATTOO
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /public/enums/activity:
    get:
      tags:
        - enum-controller
      summary: Get Activity values
      operationId: getActivities
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - INTERNET
                - MEVO
                - MOBILE
                - NDD
                - OX
                - TELEPHONY
                - TV
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /public/enums/allotmenttype:
    get:
      tags:
        - enum-controller
      summary: Get Allotment types
      operationId: getAllotmentTypes
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - B2B
                - B2C
                - POSTPAID
                - PREPAID
                - REPLACEMENT_SIM_CARD
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
securityDefinitions:
  OAuth2:
    type: oauth2
    authorizationUrl: https://iam.stg.prod.lan/auth/realms/monaco-telecom-stg/protocol/openid-connect/auth
    tokenUrl: https://iam.stg.prod.lan/auth/realms/monaco-telecom-stg/protocol/openid-connect/token
    flow: accessCode
    scopes:
      all: all APIs
definitions:
  AllotmentDTO:
    type: object
    properties:
      allotmentId:
        type: integer
        format: int64
      allotmentNumber:
        type: integer
        format: int64
        description: allotment number within the related batch
      allotmentType:
        type: string
        enum:
          - B2B
          - B2C
          - POSTPAID
          - PREPAID
          - REPLACEMENT_SIM_CARD
      batchNumber:
        type: string
      creationDate:
        type: string
        example: yyyy-MM-dd HH:mm:ss
      initialCredit:
        type: integer
        format: int32
      inventoryPool:
        $ref: '#/definitions/InventoryPoolDTORes'
      isProvisioned:
        type: boolean
      isSentToLogistics:
        type: boolean
      packWithHandset:
        type: boolean
      preProvisioning:
        type: boolean
      pricePlan:
        type: string
      quantity:
        type: integer
        format: int32
    title: AllotmentDTO
  AllotmentExportRequestDTO:
    type: object
    required:
      - allotmentId
      - fileConfigurationName
    properties:
      allotmentId:
        type: integer
        format: int64
        example: 11
        description: ID of the allotment to be exported
      fileConfigurationName:
        type: string
        example: ExportAllotment
        description: Name of the file configuration to be used, containing the templates
    title: AllotmentExportRequestDTO
  AllotmentProvisionedDTO:
    type: object
    required:
      - failures
      - successQuantity
    properties:
      allotmentId:
        type: integer
        format: int64
      failures:
        type: array
        items:
          $ref: '#/definitions/SimCardDTO'
      successQuantity:
        type: integer
        format: int32
    title: AllotmentProvisionedDTO
  AllotmentRequestDTO:
    type: object
    required:
      - allotmentType
      - batchNumber
    properties:
      allotmentType:
        type: string
        enum:
          - B2B
          - B2C
          - POSTPAID
          - PREPAID
          - REPLACEMENT_SIM_CARD
      batchNumber:
        type: integer
        format: int64
      firstSerialNumber:
        type: string
        example: 111111111111
        description: Serial Number of the first SIM Card to allot
      initialCredit:
        type: integer
        format: int32
      inventoryPoolCode:
        type: string
      offerName:
        type: string
      packWithHandset:
        type: boolean
      pricePlan:
        type: string
      quantity:
        type: integer
        format: int32
        minimum: 1
        exclusiveMinimum: false
    title: AllotmentRequestDTO
  AncillaryEquipmentChangeStateDTO:
    type: object
    properties:
      orderId:
        type: string
      pairedEquipmentId:
        type: integer
        format: int64
    title: AncillaryEquipmentChangeStateDTO
  AncillaryEquipmentDTOReq:
    type: object
    required:
      - macAddress
      - provider
    properties:
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      assignmentDate:
        type: string
        format: date-time
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      equipmentId:
        type: integer
        format: int64
      equipmentName:
        type: string
        enum:
          - BRDBOX
          - HDD
          - ONT
          - STB
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      independent:
        type: boolean
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      macAddress:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      model:
        $ref: '#/definitions/EquipmentModelDTOReq'
      modelName:
        type: string
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      numberRecycles:
        type: integer
        format: int64
      orderId:
        type: string
      pairedEquipmentCategory:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      pairedEquipmentId:
        type: integer
        format: int64
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTOReq'
      recyclable:
        type: boolean
      serialNumber:
        type: string
      sfpVersion:
        type: string
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      warehouse:
        $ref: '#/definitions/WarehouseDTOReq'
    title: AncillaryEquipmentDTOReq
  AncillaryEquipmentDTORes:
    type: object
    required:
      - macAddress
      - provider
    properties:
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      assignmentDate:
        type: string
        format: date-time
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      equipmentId:
        type: integer
        format: int64
      equipmentName:
        type: string
        enum:
          - BRDBOX
          - HDD
          - ONT
          - STB
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      independent:
        type: boolean
      links:
        $ref: '#/definitions/Links'
      macAddress:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      model:
        $ref: '#/definitions/EquipmentModelDTORes'
      modelName:
        type: string
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      numberRecycles:
        type: integer
        format: int64
      orderId:
        type: string
      pairedEquipmentCategory:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      pairedEquipmentId:
        type: integer
        format: int64
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTORes'
      recyclable:
        type: boolean
      serialNumber:
        type: string
      sfpVersion:
        type: string
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      warehouse:
        $ref: '#/definitions/WarehouseDTORes'
    title: AncillaryEquipmentDTORes
  AncillaryEquipmentUpdateDTO:
    type: object
    required:
      - independent
    properties:
      batchNumber:
        type: string
      externalNumber:
        type: string
      independent:
        type: boolean
      macAddress:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$|null
      orderId:
        type: string
      pairedEquipmentId:
        type: integer
        format: int64
      serviceId:
        type: integer
        format: int64
      sfpVersion:
        type: string
      warehouse:
        $ref: '#/definitions/WarehouseDTOReq'
    title: AncillaryEquipmentUpdateDTO
  BaseJobHistory:
    type: object
    properties:
      end:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      start:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - COMPLETED
          - FAILED
          - STARTED
    title: BaseJobHistory
  BatchDTO:
    type: object
    required:
      - batchNumber
      - configurationName
      - exportFileName
      - inventoryPoolCode
    properties:
      batchNumber:
        type: integer
        format: int64
      configurationName:
        type: string
      creationDate:
        type: string
        example: yyyy-MM-dd HH:mm:ss
      exportFileName:
        type: string
      importFileName:
        type: string
      inventoryPoolCode:
        type: string
      processedDate:
        type: string
        example: yyyy-MM-dd HH:mm:ss
      returnedDate:
        type: string
        example: yyyy-MM-dd HH:mm:ss
      simCardsCount:
        type: integer
        format: int32
    title: BatchDTO
  ByteArrayResource:
    type: object
    properties:
      byteArray:
        type: string
        format: byte
      description:
        type: string
      file:
        type: file
      filename:
        type: string
      inputStream:
        $ref: '#/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        type: string
        format: uri
      url:
        type: string
        format: url
    title: ByteArrayResource
  CPEDTOReq:
    type: object
    required:
      - provider
    properties:
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      assignmentDate:
        type: string
        format: date-time
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      chipsetId:
        type: string
      equipmentId:
        type: integer
        format: int64
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      hwVersion:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      macAddress4G:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddress5G:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressCpe:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressLan:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressRouter:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressVoip:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      model:
        $ref: '#/definitions/EquipmentModelDTOReq'
      modelName:
        type: string
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      numberRecycles:
        type: integer
        format: int64
      orderId:
        type: string
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTOReq'
      recyclable:
        type: boolean
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      warehouse:
        $ref: '#/definitions/WarehouseDTOReq'
      wpaKey:
        type: string
    title: CPEDTOReq
  CPEDTORes:
    type: object
    required:
      - provider
    properties:
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      assignmentDate:
        type: string
        format: date-time
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      chipsetId:
        type: string
      equipmentId:
        type: integer
        format: int64
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      hwVersion:
        type: string
      links:
        $ref: '#/definitions/Links'
      macAddress4G:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddress5G:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressCpe:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressLan:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressRouter:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressVoip:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      model:
        $ref: '#/definitions/EquipmentModelDTORes'
      modelName:
        type: string
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      numberRecycles:
        type: integer
        format: int64
      orderId:
        type: string
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTORes'
      recyclable:
        type: boolean
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      warehouse:
        $ref: '#/definitions/WarehouseDTORes'
      wpaKey:
        type: string
    title: CPEDTORes
  CPEPatchDto:
    type: object
    properties:
      batchNumber:
        type: string
      chipsetId:
        type: string
      externalNumber:
        type: string
      hwVersion:
        type: string
      macAddress4G:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddress5G:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressCpe:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressLan:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressRouter:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      macAddressVoip:
        type: string
        pattern: ^([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2}$
      modelName:
        type: string
      orderId:
        type: string
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
      warehouse:
        $ref: '#/definitions/WarehouseDTOReq'
    title: CPEPatchDto
  ChangeStatusDto:
    type: object
    properties:
      orderId:
        type: string
        description: Mandatory value for action book
      serviceId:
        type: integer
        format: int64
        description: 'ServiceId to associate to a SimCard, action: activate'
    title: ChangeStatusDto
  CpeUnmProjection:
    type: object
    properties:
      equipmentId:
        type: string
      macAddressCpe:
        type: string
      serialNumber:
        type: string
    title: CpeUnmProjection
  CreateBatchRequestDTO:
    type: object
    properties:
      configurationName:
        type: string
        example: EPIC_CONFIGURATION
        description: Name of the SIM Card generation configuration
      inventoryPoolCode:
        type: string
        example: EPIC_POOL
        description: Code of the inventory pool
    title: CreateBatchRequestDTO
  EquipmentModelCreateDTO:
    type: object
    properties:
      accessType:
        type: string
        example: DOCSIS
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      category:
        type: string
        description: ENUM('CPE', 'ANCILLARY')
        enum:
          - ANCILLARY
          - CPE
      currentFirmware:
        type: string
      name:
        type: string
        example: ONT
      providerId:
        type: integer
        format: int64
    title: EquipmentModelCreateDTO
  EquipmentModelDTO:
    type: object
    properties:
      accessType:
        type: string
        example: DOCSIS
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      category:
        type: string
        example: CPE
        enum:
          - ANCILLARY
          - CPE
      currentFirmware:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
        example: ONT
      provider:
        $ref: '#/definitions/ProviderDTO'
    title: EquipmentModelDTO
  EquipmentModelDTOReq:
    type: object
    properties:
      accessType:
        type: string
        example: DOCSIS
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      category:
        type: string
        example: CPE
        enum:
          - ANCILLARY
          - CPE
      currentFirmware:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
        example: ONT
      provider:
        $ref: '#/definitions/ProviderDTOReq'
    title: EquipmentModelDTOReq
  EquipmentModelDTORes:
    type: object
    properties:
      accessType:
        type: string
        example: DOCSIS
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      category:
        type: string
        example: CPE
        enum:
          - ANCILLARY
          - CPE
      currentFirmware:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
        example: ONT
      provider:
        $ref: '#/definitions/ProviderDTORes'
    title: EquipmentModelDTORes
  EquipmentsStatsDto:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      statusOfEquipments:
        type: object
        additionalProperties:
          type: integer
          format: int64
    title: EquipmentsStatsDto
  FileConfigurationDTO:
    type: object
    properties:
      headerFormat:
        type: string
      name:
        type: string
      prefix:
        type: string
      recordFormat:
        type: string
      suffix:
        type: string
    title: FileConfigurationDTO
  GenerateSimCardsRequestDTO:
    type: object
    properties:
      brand:
        type: string
        example: PREPAID
        description: brand of the simCard
      esim:
        type: boolean
        example: false
        description: Set the Esim value of the generated Sim cards
      numbers:
        type: array
        description: Optional list of numbers to associate with the freshly-created SIM Cards
        items:
          type: string
      profile:
        type: string
        example: 32K
        description: Capacity of the simCard
      provider:
        type: string
        example: GEMPLUS
        description: Provider of the simCard
      quantity:
        type: integer
        format: int32
        example: 100
        description: Quantity of SIM Cards to generate
        minimum: 1
        exclusiveMinimum: false
      simCardType:
        type: string
        example: NANO
        description: Type of the simCard
    title: GenerateSimCardsRequestDTO
  GenerateSimCardsResponseDTO:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/SimCardGenerationConfigurationDTO'
      filename:
        type: string
      simCards:
        type: array
        items:
          $ref: '#/definitions/SimCardPartialDTO'
    title: GenerateSimCardsResponseDTO
    description: Output parameters from export for generation of SIM cards
  ImportErrorDTO:
    type: object
    properties:
      error:
        type: string
      group:
        type: string
      id:
        type: integer
        format: int64
      line:
        type: integer
        format: int32
    title: ImportErrorDTO
  ImportHistoryDTO:
    type: object
    properties:
      end:
        type: string
        format: date-time
      errors:
        type: array
        items:
          $ref: '#/definitions/ImportErrorDTO'
      fileName:
        type: string
      id:
        type: integer
        format: int64
      importStatus:
        type: string
        enum:
          - ABORTED
          - COMPLETED
          - STARTED
      start:
        type: string
        format: date-time
    title: ImportHistoryDTO
  InputStream:
    type: object
    title: InputStream
  InventoryPoolDTOReq:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      inventoryPoolId:
        type: integer
        format: int64
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      mvno:
        type: integer
        format: int32
      simProfile:
        type: string
        enum:
          - DEFAULT
          - REPLACEMENT
    title: InventoryPoolDTOReq
  InventoryPoolDTORes:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      inventoryPoolId:
        type: integer
        format: int64
      links:
        $ref: '#/definitions/Links'
      mvno:
        type: integer
        format: int32
      simProfile:
        type: string
        enum:
          - DEFAULT
          - REPLACEMENT
    title: InventoryPoolDTORes
  JobConfigurationDTO:
    type: object
    properties:
      days:
        type: integer
        format: int64
      enabled:
        type: boolean
      operation:
        type: string
        enum:
          - AUDIT_CLEAN
      recyclable:
        type: boolean
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
    title: JobConfigurationDTO
  Link:
    type: object
    properties:
      deprecation:
        type: string
      href:
        type: string
      hreflang:
        type: string
      media:
        type: string
      name:
        type: string
      profile:
        type: string
      rel:
        $ref: '#/definitions/LinkRelation'
      title:
        type: string
      type:
        type: string
    title: Link
  LinkRelation:
    type: object
    title: LinkRelation
  Links:
    type: object
    properties:
      empty:
        type: boolean
    title: Links
  PageMetadata:
    type: object
    properties:
      number:
        type: integer
        format: int64
      size:
        type: integer
        format: int64
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int64
    title: PageMetadata
  PageOfAllotmentDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AllotmentDTO'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfAllotmentDTO
  PageOfBaseJobHistory:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/BaseJobHistory'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfBaseJobHistory
  PageOfBatchDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/BatchDTO'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfBatchDTO
  PageOfCpeUnmProjection:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CpeUnmProjection'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfCpeUnmProjection
  PageOfEquipmentModelDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/EquipmentModelDTO'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfEquipmentModelDTO
  PageOfFileConfigurationDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/FileConfigurationDTO'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfFileConfigurationDTO
  PageOfImportHistoryDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ImportHistoryDTO'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfImportHistoryDTO
  PageOfInventoryPoolDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/InventoryPoolDTORes'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfInventoryPoolDTO
  PageOfJobConfigurationDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/JobConfigurationDTO'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfJobConfigurationDTO
  PageOfSimCardGenerationConfigurationDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SimCardGenerationConfigurationDTORes'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: PageOfSimCardGenerationConfigurationDTO
  Pageable:
    type: object
    properties:
      page:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: string
    title: Pageable
  PagedModelOfAncillaryEquipmentDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AncillaryEquipmentDTORes'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfAncillaryEquipmentDTO
  PagedModelOfCPEDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CPEDTORes'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfCPEDTO
  PagedModelOfPlmnDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PlmnDTORes'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfPlmnDTO
  PagedModelOfProviderDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ProviderDTORes'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfProviderDTO
  PagedModelOfRevisionDTOOfAncillaryEquipmentDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/RevisionDTOOfAncillaryEquipmentDTO'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfRevisionDTOOfAncillaryEquipmentDTO
  PagedModelOfRevisionDTOOfCPEDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/RevisionDTOOfCPEDTO'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfRevisionDTOOfCPEDTO
  PagedModelOfRevisionDTOOfSimCardDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/RevisionDTOOfSimCardDTO'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfRevisionDTOOfSimCardDTO
  PagedModelOfSimCardDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SimCardDTORes'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfSimCardDTO
  PagedModelOfWarehouseDTO:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/WarehouseDTORes'
      links:
        $ref: '#/definitions/Links'
      page:
        $ref: '#/definitions/PageMetadata'
    title: PagedModelOfWarehouseDTO
  PlmnDTO:
    type: object
    properties:
      code:
        type: string
      countryIsoCode:
        type: string
      countryName:
        type: string
      links:
        $ref: '#/definitions/Links'
      networkName:
        type: string
      plmnId:
        type: integer
        format: int64
      rangesPrefix:
        type: string
      tadigCode:
        type: string
    title: PlmnDTO
  PlmnDTOReq:
    type: object
    properties:
      code:
        type: string
      countryIsoCode:
        type: string
      countryName:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      networkName:
        type: string
      plmnId:
        type: integer
        format: int64
      rangesPrefix:
        type: string
      tadigCode:
        type: string
    title: PlmnDTOReq
  PlmnDTORes:
    type: object
    properties:
      code:
        type: string
      countryIsoCode:
        type: string
      countryName:
        type: string
      links:
        $ref: '#/definitions/Links'
      networkName:
        type: string
      plmnId:
        type: integer
        format: int64
      rangesPrefix:
        type: string
      tadigCode:
        type: string
    title: PlmnDTORes
  ProviderDTO:
    type: object
    required:
      - accessType
      - name
    properties:
      accessType:
        type: string
        description: Provider access type
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      links:
        $ref: '#/definitions/Links'
      name:
        type: string
        example: Toto
        description: Provider code
      providerId:
        type: integer
        format: int64
    title: ProviderDTO
  ProviderDTOReq:
    type: object
    required:
      - accessType
      - name
    properties:
      accessType:
        type: string
        description: Provider access type
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      name:
        type: string
        example: Toto
        description: Provider code
      providerId:
        type: integer
        format: int64
    title: ProviderDTOReq
  ProviderDTORes:
    type: object
    required:
      - accessType
      - name
    properties:
      accessType:
        type: string
        description: Provider access type
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      links:
        $ref: '#/definitions/Links'
      name:
        type: string
        example: Toto
        description: Provider code
      providerId:
        type: integer
        format: int64
    title: ProviderDTORes
  RevisionDTOOfAncillaryEquipmentDTO:
    type: object
    properties:
      author:
        type: string
      date:
        type: string
        format: date-time
      entity:
        $ref: '#/definitions/AncillaryEquipmentDTORes'
      links:
        $ref: '#/definitions/Links'
    title: RevisionDTOOfAncillaryEquipmentDTO
  RevisionDTOOfCPEDTO:
    type: object
    properties:
      author:
        type: string
      date:
        type: string
        format: date-time
      entity:
        $ref: '#/definitions/CPEDTORes'
      links:
        $ref: '#/definitions/Links'
    title: RevisionDTOOfCPEDTO
  RevisionDTOOfSimCardDTO:
    type: object
    properties:
      author:
        type: string
      date:
        type: string
        format: date-time
      entity:
        $ref: '#/definitions/SimCardDTORes'
      links:
        $ref: '#/definitions/Links'
    title: RevisionDTOOfSimCardDTO
  SequenceDTO:
    type: object
    properties:
      name:
        type: string
      value:
        type: integer
        format: int64
        example: 1
    title: SequenceDTO
  SequenceResponseDTO:
    type: object
    properties:
      first:
        type: integer
        format: int64
      last:
        type: integer
        format: int64
      name:
        type: string
    title: SequenceResponseDTO
  SimCardDTO:
    type: object
    required:
      - provider
    properties:
      accessControlClass:
        type: string
        description: The access control class
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      algorithmVersion:
        type: integer
        format: int32
      allotmentId:
        type: string
        example: 345
        description: Allotment ID
      assignmentDate:
        type: string
        format: date-time
      authKey:
        type: string
        description: The authorization key
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      checkDigit:
        type: integer
        format: int32
      equipmentId:
        type: integer
        format: int64
      esim:
        type: boolean
        description: If the given sim is an eSim
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      imsiNumber:
        type: string
        example: 1234567890123
        description: The IMSI Number
      imsiSponsorNumber:
        type: string
        description: The IMSI Sponsor number
      inventoryPool:
        $ref: '#/definitions/InventoryPoolDTOReq'
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      number:
        type: string
        description: The number associated with the simcard
      orderId:
        type: string
      otaSalt:
        type: string
        description: Salt used for ota
      packId:
        type: string
      pin1Code:
        type: string
        description: The pin code 1
        pattern: ^([0-9A-F]{4})$
      pin2Code:
        type: string
        description: The pin code 2
        pattern: ^([0-9A-F]{4})$
      plmn:
        description: The Plmn
        $ref: '#/definitions/PlmnDTO'
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTO'
      puk1Code:
        type: string
        description: The puk code 1
        pattern: ^([0-9A-F]{8})$
      puk2Code:
        type: string
        description: The puk code 2
        pattern: ^([0-9A-F]{8})$
      recyclable:
        type: boolean
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
        description: The service Id
      simProfile:
        type: string
        description: The simcard profile
        enum:
          - DEFAULT
          - REPLACEMENT
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      transportKey:
        type: string
      warehouse:
        $ref: '#/definitions/WarehouseDTO'
    title: SimCardDTO
    description: All details about the SimCard
  SimCardDTOReq:
    type: object
    required:
      - provider
    properties:
      accessControlClass:
        type: string
        description: The access control class
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      algorithmVersion:
        type: integer
        format: int32
      allotmentId:
        type: string
        example: 345
        description: Allotment ID
      assignmentDate:
        type: string
        format: date-time
      authKey:
        type: string
        description: The authorization key
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      checkDigit:
        type: integer
        format: int32
      equipmentId:
        type: integer
        format: int64
      esim:
        type: boolean
        description: If the given sim is an eSim
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      imsiNumber:
        type: string
        example: 1234567890123
        description: The IMSI Number
      imsiSponsorNumber:
        type: string
        description: The IMSI Sponsor number
      inventoryPool:
        $ref: '#/definitions/InventoryPoolDTOReq'
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      number:
        type: string
        description: The number associated with the simcard
      orderId:
        type: string
      otaSalt:
        type: string
        description: Salt used for ota
      packId:
        type: string
      pin1Code:
        type: string
        description: The pin code 1
        pattern: ^([0-9A-F]{4})$
      pin2Code:
        type: string
        description: The pin code 2
        pattern: ^([0-9A-F]{4})$
      plmn:
        description: The Plmn
        $ref: '#/definitions/PlmnDTOReq'
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTOReq'
      puk1Code:
        type: string
        description: The puk code 1
        pattern: ^([0-9A-F]{8})$
      puk2Code:
        type: string
        description: The puk code 2
        pattern: ^([0-9A-F]{8})$
      recyclable:
        type: boolean
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
        description: The service Id
      simProfile:
        type: string
        description: The simcard profile
        enum:
          - DEFAULT
          - REPLACEMENT
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      transportKey:
        type: string
      warehouse:
        $ref: '#/definitions/WarehouseDTOReq'
    title: SimCardDTOReq
    description: All details about the SimCard
  SimCardDTORes:
    type: object
    required:
      - provider
    properties:
      accessControlClass:
        type: string
        description: The access control class
      accessType:
        type: string
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activationDate:
        type: string
        format: date-time
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      algorithmVersion:
        type: integer
        format: int32
      allotmentId:
        type: string
        example: 345
        description: Allotment ID
      assignmentDate:
        type: string
        format: date-time
      authKey:
        type: string
        description: The authorization key
      batchNumber:
        type: string
      category:
        type: string
        enum:
          - ANCILLARY
          - CPE
          - SIMCARD
      checkDigit:
        type: integer
        format: int32
      equipmentId:
        type: integer
        format: int64
      esim:
        type: boolean
        description: If the given sim is an eSim
      events:
        type: array
        description: Available transitions
        items:
          type: string
          enum:
            - activate
            - assign
            - available
            - book
            - deactivate
            - depreciate
            - free
            - instore
            - onhold
            - repackage
            - rollback_activate
            - rollback_deactivate
            - rollback_onhold
            - setnotreturn
            - setreturn
            - unassign
      externalNumber:
        type: string
      imsiNumber:
        type: string
        example: 1234567890123
        description: The IMSI Number
      imsiSponsorNumber:
        type: string
        description: The IMSI Sponsor number
      inventoryPool:
        $ref: '#/definitions/InventoryPoolDTORes'
      links:
        $ref: '#/definitions/Links'
      nature:
        type: string
        enum:
          - ADDITIONAL
          - MAIN
      number:
        type: string
        description: The number associated with the simcard
      orderId:
        type: string
      otaSalt:
        type: string
        description: Salt used for ota
      packId:
        type: string
      pin1Code:
        type: string
        description: The pin code 1
        pattern: ^([0-9A-F]{4})$
      pin2Code:
        type: string
        description: The pin code 2
        pattern: ^([0-9A-F]{4})$
      plmn:
        description: The Plmn
        $ref: '#/definitions/PlmnDTORes'
      preactivated:
        type: boolean
      provider:
        $ref: '#/definitions/ProviderDTORes'
      puk1Code:
        type: string
        description: The puk code 1
        pattern: ^([0-9A-F]{8})$
      puk2Code:
        type: string
        description: The puk code 2
        pattern: ^([0-9A-F]{8})$
      recyclable:
        type: boolean
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
        description: The service Id
      simProfile:
        type: string
        description: The simcard profile
        enum:
          - DEFAULT
          - REPLACEMENT
      status:
        type: string
        enum:
          - ACTIVATED
          - ASSIGNED
          - AVAILABLE
          - BOOKED
          - DEACTIVATED
          - DEPRECATED
          - FINAL
          - INSTORE
          - NOTRETURNED
          - ONHOLD
          - REPACKAGING
          - RETURNED
      transportKey:
        type: string
      warehouse:
        $ref: '#/definitions/WarehouseDTORes'
    title: SimCardDTORes
    description: All details about the SimCard
  SimCardGenerationConfigurationDTO:
    type: object
    properties:
      algorithmVersion:
        type: integer
        format: int32
      artwork:
        type: string
        example: EIR_SME_REP
      exportFileConfiguration:
        description: File configuration to be used at export time
        $ref: '#/definitions/FileConfigurationDTO'
      fixedPrefix:
        type: string
        example: 8935303
        description: Mandatory for EIR, used in ICCID generation
      iccidSequence:
        type: string
        example: DEFAULT
        description: ICCID Sequence to use for ICCID creation
      importFileConfiguration:
        description: File configuration to be used at import time
        $ref: '#/definitions/FileConfigurationDTO'
      msinSequence:
        type: string
        example: DEFAULT
        description: MSIN Sequence to use for IMSI creation
      name:
        type: string
        example: EIR_5G_MBB_MULTISIM
        description: Identifier of the configuration
      notify:
        type: string
      plmn:
        description: PLMN to use for IMSI creation
        $ref: '#/definitions/PlmnDTO'
      sequencePrefix:
        type: string
        example: '0524'
        description: Mandatory for EIR, used in ICCID generation
      simReference:
        type: string
        example: MET_PP001_LTE
      transportKey:
        type: string
        example: '010'
      type:
        type: string
        example: MULTISIM
    title: SimCardGenerationConfigurationDTO
  SimCardGenerationConfigurationDTOReq:
    type: object
    properties:
      algorithmVersion:
        type: integer
        format: int32
      artwork:
        type: string
        example: EIR_SME_REP
      exportFileConfiguration:
        description: File configuration to be used at export time
        $ref: '#/definitions/FileConfigurationDTO'
      fixedPrefix:
        type: string
        example: 8935303
        description: Mandatory for EIR, used in ICCID generation
      iccidSequence:
        type: string
        example: DEFAULT
        description: ICCID Sequence to use for ICCID creation
      importFileConfiguration:
        description: File configuration to be used at import time
        $ref: '#/definitions/FileConfigurationDTO'
      msinSequence:
        type: string
        example: DEFAULT
        description: MSIN Sequence to use for IMSI creation
      name:
        type: string
        example: EIR_5G_MBB_MULTISIM
        description: Identifier of the configuration
      notify:
        type: string
      plmn:
        description: PLMN to use for IMSI creation
        $ref: '#/definitions/PlmnDTOReq'
      sequencePrefix:
        type: string
        example: '0524'
        description: Mandatory for EIR, used in ICCID generation
      simReference:
        type: string
        example: MET_PP001_LTE
      transportKey:
        type: string
        example: '010'
      type:
        type: string
        example: MULTISIM
    title: SimCardGenerationConfigurationDTOReq
  SimCardGenerationConfigurationDTORes:
    type: object
    properties:
      algorithmVersion:
        type: integer
        format: int32
      artwork:
        type: string
        example: EIR_SME_REP
      exportFileConfiguration:
        description: File configuration to be used at export time
        $ref: '#/definitions/FileConfigurationDTO'
      fixedPrefix:
        type: string
        example: 8935303
        description: Mandatory for EIR, used in ICCID generation
      iccidSequence:
        type: string
        example: DEFAULT
        description: ICCID Sequence to use for ICCID creation
      importFileConfiguration:
        description: File configuration to be used at import time
        $ref: '#/definitions/FileConfigurationDTO'
      msinSequence:
        type: string
        example: DEFAULT
        description: MSIN Sequence to use for IMSI creation
      name:
        type: string
        example: EIR_5G_MBB_MULTISIM
        description: Identifier of the configuration
      notify:
        type: string
      plmn:
        description: PLMN to use for IMSI creation
        $ref: '#/definitions/PlmnDTORes'
      sequencePrefix:
        type: string
        example: '0524'
        description: Mandatory for EIR, used in ICCID generation
      simReference:
        type: string
        example: MET_PP001_LTE
      transportKey:
        type: string
        example: '010'
      type:
        type: string
        example: MULTISIM
    title: SimCardGenerationConfigurationDTORes
  SimCardPartialDTO:
    type: object
    properties:
      equipmentId:
        type: integer
        format: int64
      imsiNumber:
        type: string
      number:
        type: string
      serialNumber:
        type: string
    title: SimCardPartialDTO
  SimCardPatchDTO:
    type: object
    properties:
      accessControlClass:
        type: string
        description: The access control class
      accessType:
        type: string
        description: Access Type
        enum:
          - BBHB
          - DISE
          - DOCSIS
          - FREEDHOME
          - FTTH
          - MOBILE
          - TRUNKSIP
          - ZATTOO
      activity:
        type: string
        enum:
          - INTERNET
          - MEVO
          - MOBILE
          - NDD
          - OX
          - TELEPHONY
          - TV
      authKey:
        type: string
        description: The authorization key
      batchNumber:
        type: string
        description: Batch number linked with this simCard
      esim:
        type: boolean
        description: Indicates ff the given SIM is an eSIM
      externalNumber:
        type: string
        description: External number
      imsiNumber:
        type: string
        example: 1234567890123
        description: The IMSI Number
      imsiSponsorNumber:
        type: string
        description: The IMSI Sponsor number
      nature:
        type: string
        description: Nature of the SIM Card
        enum:
          - ADDITIONAL
          - MAIN
      number:
        type: string
        description: MSISDN
      orderId:
        type: string
        description: The order Id
      packId:
        type: string
      pin1Code:
        type: string
        description: The pin code 1
        pattern: ^([0-9A-F]{4})$
      pin2Code:
        type: string
        description: The pin code 2
        pattern: ^([0-9A-F]{4})$
      puk1Code:
        type: string
        description: The puk code 1
        pattern: ^([0-9A-F]{8})$
      puk2Code:
        type: string
        description: The puk code 2
        pattern: ^([0-9A-F]{8})$
      serialNumber:
        type: string
      serviceId:
        type: integer
        format: int64
        description: The service Id
      simProfile:
        type: string
        description: The simcard profile
        enum:
          - DEFAULT
          - REPLACEMENT
      warehouseId:
        type: integer
        format: int64
        description: The warehouse Id
    title: SimCardPatchDTO
    description: All details about the SimCard
  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort
  UpdateFileConfigurationDTO:
    type: object
    properties:
      headerFormat:
        type: string
      name:
        type: string
      prefix:
        type: string
      recordFormat:
        type: string
      suffix:
        type: string
    title: UpdateFileConfigurationDTO
  UpdateInventoryPoolDTO:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      mvno:
        type: integer
        format: int32
      simProfile:
        type: string
        enum:
          - DEFAULT
          - REPLACEMENT
    title: UpdateInventoryPoolDTO
  UpdateSimCardGenerationConfigurationDTO:
    type: object
    properties:
      algorithmVersion:
        type: integer
        format: int32
      artwork:
        type: string
      exportFileConfiguration:
        $ref: '#/definitions/UpdateFileConfigurationDTO'
      fixedPrefix:
        type: string
      iccidSequence:
        type: string
      importFileConfiguration:
        $ref: '#/definitions/UpdateFileConfigurationDTO'
      msinSequence:
        type: string
      name:
        type: string
      notify:
        type: string
      plmn:
        $ref: '#/definitions/PlmnDTOReq'
      sequencePrefix:
        type: string
      simReference:
        type: string
      transportKey:
        type: string
      type:
        type: string
    title: UpdateSimCardGenerationConfigurationDTO
  WarehouseDTO:
    type: object
    required:
      - name
      - resellerCode
    properties:
      links:
        $ref: '#/definitions/Links'
      name:
        type: string
        example: Toto
        description: Warehouse code
      resellerCode:
        type: string
        example: Toto
        description: Warehouse reseller code
      warehouseId:
        type: integer
        format: int64
    title: WarehouseDTO
  WarehouseDTOReq:
    type: object
    required:
      - name
      - resellerCode
    properties:
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      name:
        type: string
        example: Toto
        description: Warehouse code
      resellerCode:
        type: string
        example: Toto
        description: Warehouse reseller code
      warehouseId:
        type: integer
        format: int64
    title: WarehouseDTOReq
  WarehouseDTORes:
    type: object
    required:
      - name
      - resellerCode
    properties:
      links:
        $ref: '#/definitions/Links'
      name:
        type: string
        example: Toto
        description: Warehouse code
      resellerCode:
        type: string
        example: Toto
        description: Warehouse reseller code
      warehouseId:
        type: integer
        format: int64
    title: WarehouseDTORes
