package mc.monacotelecom.tecrep.equipments.integration;

import mc.monacotelecom.tecrep.equipments.process.simcardgenerator.SimCardIdentifiersGeneratorEir;
import org.hamcrest.core.IsNull;
import org.junit.jupiter.api.Test;
import org.springframework.context.annotation.Import;
import org.springframework.http.MediaType;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.jdbc.Sql;

import static org.hamcrest.Matchers.hasSize;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;


@Import(SimCardIdentifiersGeneratorEir.class)
@ActiveProfiles({"eir"})
@Sql({"/sql/clean.sql", "/sql/simcard_generation_data.sql"})
class SimCardGenerationIntegrationTests extends BaseIntegrationTest {

    @Test
    void export_simCardGeneration_failureWithBadBatchNumber() throws Exception {
        mockMvc.perform(post("/private/auth/batch/99/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isNotFound());
    }

    @Test
    void export_simCardGeneration_failureWithoutQuantity() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{}"))
                .andDo(print())
                .andExpect(status().isBadRequest());
    }

    @Test
    void export_simCardGeneration_failureWithBadQuantity() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 0}"))
                .andDo(print())
                .andExpect(status().isBadRequest());
    }

    @Test
    void export_simCardGeneration_failureWithoutEnoughNumbers() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3, \"numbers\": [1,2]}"))
                .andDo(print())
                .andExpect(status().isBadRequest())
                .andExpect(content().json("{\"errorMessage\":\"Quantity (3) is not equal to the number of msisdn provided (2)\"}"));
    }

    @Test
    void export_simCardGeneration_failureWithTooMuchNumbers() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3, \"numbers\": [1,2,3,4]}"))
                .andDo(print())
                .andExpect(status().isBadRequest())
                .andExpect(content().json("{\"errorMessage\":\"Quantity (3) is not equal to the number of msisdn provided (4)\"}"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_success() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(content().json("{\"filename\":\"TEST.out\",\"configuration\":{\"name\":\"EIRCOM_FCS_MOB_LANDLINE_UNPAIR\",\"exportFileConfiguration\":{\"name\":\"default_export\",\"prefix\":\"MMC\",\"suffix\":\".inp\",\"headerFormat\":\"<div>${CONTENT}</div>\",\"recordFormat\":\"<div>${CONTENT}</div>\"},\"importFileConfiguration\":{\"name\":\"default_import\",\"prefix\":\"MMC\",\"suffix\":\".out\",\"headerFormat\":null,\"recordFormat\":null},\"transportKey\":\"6\",\"artwork\":null,\"simReference\":null,\"type\":\"UNIVERSAL\",\"fixedPrefix\":\"8935303\",\"sequencePrefix\":\"0524\",\"algorithmVersion\":1,\"plmn\":{\"plmnId\":1,\"code\":\"27203\",\"networkName\":\"Meteor Mobile Telecommunications Limited\",\"tadigCode\":\"IRLME\",\"countryIsoCode\":\"IRL\",\"countryName\":\"Ireland\",\"rangesPrefix\":\"3368900890401\",\"links\":[]},\"msinSequence\":\"DEFAULT\",\"iccidSequence\":\"DEFAULT\",\"notify\":\"test@test.test\"},\"simCards\":[{\"equipmentId\":1,\"imsiNumber\":\"272030100000000\",\"serialNumber\":\"893530305241000000\",\"number\":null},{\"equipmentId\":2,\"imsiNumber\":\"272030100000001\",\"serialNumber\":\"893530305241000001\",\"number\":null},{\"equipmentId\":3,\"imsiNumber\":\"272030100000002\",\"serialNumber\":\"893530305241000002\",\"number\":null}]}"));

        mockMvc.perform(get("/private/auth/simcards"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(jsonPath("$._embedded.simcards", hasSize(3)))
                .andExpect(jsonPath("$._embedded.simcards[0].equipmentId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].serialNumber").value("893530305241000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[0].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[0].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[0].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[0].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[0].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[0].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[0].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiNumber").value("272030100000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[0].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[0].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].equipmentId").value(2))
                .andExpect(jsonPath("$._embedded.simcards[1].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].serialNumber").value("893530305241000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[1].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[1].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[1].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[1].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[1].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[1].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[1].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiNumber").value("272030100000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[1].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[1].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].equipmentId").value(3))
                .andExpect(jsonPath("$._embedded.simcards[2].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].serialNumber").value("893530305241000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[2].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[2].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[2].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[2].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[2].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[2].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[2].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiNumber").value("272030100000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[2].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[2].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._links.self.href").value("http://localhost/simcards"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_successWithExplicitEmptyNumbersList() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3, \"numbers\": []}"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(content().json("{\"filename\":\"TEST.out\",\"configuration\":{\"name\":\"EIRCOM_FCS_MOB_LANDLINE_UNPAIR\",\"exportFileConfiguration\":{\"name\":\"default_export\",\"prefix\":\"MMC\",\"suffix\":\".inp\",\"headerFormat\":\"<div>${CONTENT}</div>\",\"recordFormat\":\"<div>${CONTENT}</div>\"},\"importFileConfiguration\":{\"name\":\"default_import\",\"prefix\":\"MMC\",\"suffix\":\".out\",\"headerFormat\":null,\"recordFormat\":null},\"transportKey\":\"6\",\"artwork\":null,\"simReference\":null,\"type\":\"UNIVERSAL\",\"fixedPrefix\":\"8935303\",\"sequencePrefix\":\"0524\",\"algorithmVersion\":1,\"plmn\":{\"plmnId\":1,\"code\":\"27203\",\"networkName\":\"Meteor Mobile Telecommunications Limited\",\"tadigCode\":\"IRLME\",\"countryIsoCode\":\"IRL\",\"countryName\":\"Ireland\",\"rangesPrefix\":\"3368900890401\",\"links\":[]},\"msinSequence\":\"DEFAULT\",\"iccidSequence\":\"DEFAULT\",\"notify\":\"test@test.test\"},\"simCards\":[{\"equipmentId\":1,\"imsiNumber\":\"272030100000000\",\"serialNumber\":\"893530305241000000\",\"number\":null},{\"equipmentId\":2,\"imsiNumber\":\"272030100000001\",\"serialNumber\":\"893530305241000001\",\"number\":null},{\"equipmentId\":3,\"imsiNumber\":\"272030100000002\",\"serialNumber\":\"893530305241000002\",\"number\":null}]}"));

        mockMvc.perform(get("/private/auth/simcards"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(jsonPath("$._embedded.simcards", hasSize(3)))
                .andExpect(jsonPath("$._embedded.simcards[0].equipmentId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].serialNumber").value("893530305241000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[0].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[0].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[0].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[0].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[0].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[0].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[0].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiNumber").value("272030100000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[0].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[0].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].equipmentId").value(2))
                .andExpect(jsonPath("$._embedded.simcards[1].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].serialNumber").value("893530305241000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[1].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[1].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[1].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[1].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[1].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[1].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[1].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiNumber").value("272030100000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[1].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[1].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].equipmentId").value(3))
                .andExpect(jsonPath("$._embedded.simcards[2].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].serialNumber").value("893530305241000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[2].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[2].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[2].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[2].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[2].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[2].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[2].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiNumber").value("272030100000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[2].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[2].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._links.self.href").value("http://localhost/simcards"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_successWithPairing() throws Exception {
        mockMvc.perform(post("/private/auth/batch/2/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3, \"numbers\": [1,2,3]}"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(content().json("{\"filename\":\"TEST.out\",\"configuration\":{\"name\":\"EIRCOM_FCS_MOB_LANDLINE_UNPAIR\",\"exportFileConfiguration\":{\"name\":\"default_export\",\"prefix\":\"MMC\",\"suffix\":\".inp\",\"headerFormat\":\"<div>${CONTENT}</div>\",\"recordFormat\":\"<div>${CONTENT}</div>\"},\"importFileConfiguration\":{\"name\":\"default_import\",\"prefix\":\"MMC\",\"suffix\":\".out\",\"headerFormat\":null,\"recordFormat\":null},\"transportKey\":\"6\",\"artwork\":null,\"simReference\":null,\"type\":\"UNIVERSAL\",\"fixedPrefix\":\"8935303\",\"sequencePrefix\":\"0524\",\"algorithmVersion\":1,\"plmn\":{\"plmnId\":1,\"code\":\"27203\",\"networkName\":\"Meteor Mobile Telecommunications Limited\",\"tadigCode\":\"IRLME\",\"countryIsoCode\":\"IRL\",\"countryName\":\"Ireland\",\"rangesPrefix\":\"3368900890401\",\"links\":[]},\"msinSequence\":\"DEFAULT\",\"iccidSequence\":\"DEFAULT\",\"notify\":\"test@test.test\"},\"simCards\":[{\"equipmentId\":1,\"imsiNumber\":\"272030100000000\",\"serialNumber\":\"893530305241000000\",\"number\":\"1\"},{\"equipmentId\":2,\"imsiNumber\":\"272030100000001\",\"serialNumber\":\"893530305241000001\",\"number\":\"2\"},{\"equipmentId\":3,\"imsiNumber\":\"272030100000002\",\"serialNumber\":\"893530305241000002\",\"number\":\"3\"}]}"));

        mockMvc.perform(get("/private/auth/simcards"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(jsonPath("$._embedded.simcards", hasSize(3)))
                .andExpect(jsonPath("$._embedded.simcards[0].equipmentId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].serialNumber").value("893530305241000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[0].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[0].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[0].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[0].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[0].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[0].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[0].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiNumber").value("272030100000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[0].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[0].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].equipmentId").value(2))
                .andExpect(jsonPath("$._embedded.simcards[1].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].serialNumber").value("893530305241000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[1].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[1].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[1].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[1].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[1].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[1].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[1].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiNumber").value("272030100000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[1].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[1].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].equipmentId").value(3))
                .andExpect(jsonPath("$._embedded.simcards[2].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].serialNumber").value("893530305241000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[2].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[2].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[2].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[2].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].batchNumber").value("2"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[2].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[2].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[2].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiNumber").value("272030100000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[2].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[2].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._links.self.href").value("http://localhost/simcards"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_successWithAnotherMsinSequence() throws Exception {
        mockMvc.perform(post("/private/auth/batch/3/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(content().json("{\"filename\":\"TEST3.out\",\"configuration\":{\"name\":\"ANOTHER_CONFIGURATION\",\"exportFileConfiguration\":{\"name\":\"default_export\",\"prefix\":\"MMC\",\"suffix\":\".inp\",\"headerFormat\":\"<div>${CONTENT}</div>\",\"recordFormat\":\"<div>${CONTENT}</div>\"},\"importFileConfiguration\":{\"name\":\"default_import\",\"prefix\":\"MMC\",\"suffix\":\".out\",\"headerFormat\":null,\"recordFormat\":null},\"transportKey\":\"6\",\"artwork\":null,\"simReference\":null,\"type\":null,\"fixedPrefix\":\"8935303\",\"sequencePrefix\":\"0524\",\"algorithmVersion\":1,\"plmn\":{\"plmnId\":1,\"code\":\"27203\",\"networkName\":\"Meteor Mobile Telecommunications Limited\",\"tadigCode\":\"IRLME\",\"countryIsoCode\":\"IRL\",\"countryName\":\"Ireland\",\"rangesPrefix\":\"3368900890401\",\"links\":[]},\"msinSequence\":\"ANOTHER_SEQUENCE\",\"iccidSequence\":\"DEFAULT\",\"notify\":\"test@test.test\"},\"simCards\":[{\"equipmentId\":1,\"imsiNumber\":\"272030658854413\",\"serialNumber\":\"893530305241000000\",\"number\":null},{\"equipmentId\":2,\"imsiNumber\":\"272030658854414\",\"serialNumber\":\"893530305241000001\",\"number\":null},{\"equipmentId\":3,\"imsiNumber\":\"272030658854415\",\"serialNumber\":\"893530305241000002\",\"number\":null}]}"));

        mockMvc.perform(get("/private/auth/simcards"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(jsonPath("$._embedded.simcards", hasSize(3)))
                .andExpect(jsonPath("$._embedded.simcards[0].equipmentId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].serialNumber").value("893530305241000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[0].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[0].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[0].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[0].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].batchNumber").value("3"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[0].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[0].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[0].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiNumber").value("272030658854413"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[0].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[0].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].equipmentId").value(2))
                .andExpect(jsonPath("$._embedded.simcards[1].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].serialNumber").value("893530305241000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[1].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[1].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[1].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[1].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].batchNumber").value("3"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[1].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[1].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[1].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiNumber").value("272030658854414"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[1].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[1].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].equipmentId").value(3))
                .andExpect(jsonPath("$._embedded.simcards[2].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].serialNumber").value("893530305241000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[2].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[2].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[2].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[2].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].batchNumber").value("3"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[2].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[2].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[2].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiNumber").value("272030658854415"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[2].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[2].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._links.self.href").value("http://localhost/simcards"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_failureNotInitializedMsinSequence() throws Exception {
        mockMvc.perform(post("/private/auth/batch/4/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isBadRequest())
                .andExpect(content().json("{\"errorMessage\":\"MSIN sequence 'MISSING_SEQUENCE' has not been initialized\"}"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_failureForFinishedMsinSequence() throws Exception {
        mockMvc.perform(post("/private/auth/batch/5/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isBadRequest())
                .andExpect(content().json("{\"errorMessage\":\"MSIN Sequence 'FINISHED_SEQUENCE' cannot be used any more, as its theoretical next value '658854412' is already defined by sequence 'ANOTHER_SEQUENCE'\"}"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_successWithAnotherIccidSequence() throws Exception {
        mockMvc.perform(post("/private/auth/batch/6/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(content().json("{\"filename\":\"TEST6.out\",\"configuration\":{\"name\":\"WOW_CONFIGURATION\",\"exportFileConfiguration\":{\"name\":\"default_export\",\"prefix\":\"MMC\",\"suffix\":\".inp\",\"headerFormat\":\"<div>${CONTENT}</div>\",\"recordFormat\":\"<div>${CONTENT}</div>\"},\"importFileConfiguration\":{\"name\":\"default_import\",\"prefix\":\"MMC\",\"suffix\":\".out\",\"headerFormat\":null,\"recordFormat\":null},\"transportKey\":\"6\",\"artwork\":null,\"simReference\":null,\"type\":null,\"fixedPrefix\":\"8935303\",\"sequencePrefix\":\"0524\",\"algorithmVersion\":1,\"plmn\":{\"plmnId\":1,\"code\":\"27203\",\"networkName\":\"Meteor Mobile Telecommunications Limited\",\"tadigCode\":\"IRLME\",\"countryIsoCode\":\"IRL\",\"countryName\":\"Ireland\",\"rangesPrefix\":\"3368900890401\",\"links\":[]},\"msinSequence\":\"DEFAULT\",\"iccidSequence\":\"ANOTHER_SEQUENCE\",\"notify\":\"test@test.test\"},\"simCards\":[{\"equipmentId\":1,\"imsiNumber\":\"272030100000000\",\"serialNumber\":\"893530305240666667\",\"number\":null},{\"equipmentId\":2,\"imsiNumber\":\"272030100000001\",\"serialNumber\":\"893530305240666668\",\"number\":null},{\"equipmentId\":3,\"imsiNumber\":\"272030100000002\",\"serialNumber\":\"893530305240666669\",\"number\":null}]}"));

        mockMvc.perform(get("/private/auth/simcards"))
                .andDo(print())
                .andExpect(status().isOk())
                .andExpect(jsonPath("$._embedded.simcards", hasSize(3)))
                .andExpect(jsonPath("$._embedded.simcards[0].equipmentId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].serialNumber").value("893530305240666667"))
                .andExpect(jsonPath("$._embedded.simcards[0].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[0].activity").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[0].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[0].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[0].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].batchNumber").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[0].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[0].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[0].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[0].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiNumber").value("272030100000000"))
                .andExpect(jsonPath("$._embedded.simcards[0].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[0].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[0].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[0].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[0].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[0].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[0].esim").value(false))
                .andExpect(jsonPath("$._embedded.simcards[0].otaSalt").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].equipmentId").value(2))
                .andExpect(jsonPath("$._embedded.simcards[1].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].serialNumber").value("893530305240666668"))
                .andExpect(jsonPath("$._embedded.simcards[1].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[1].activity").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[1].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[1].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[1].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].batchNumber").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[1].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[1].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[1].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[1].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiNumber").value("272030100000001"))
                .andExpect(jsonPath("$._embedded.simcards[1].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[1].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[1].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[1].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[1].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[1].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[1].esim").value(false))
                .andExpect(jsonPath("$._embedded.simcards[1].otaSalt").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].equipmentId").value(3))
                .andExpect(jsonPath("$._embedded.simcards[2].orderId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].serialNumber").value("893530305240666669"))
                .andExpect(jsonPath("$._embedded.simcards[2].externalNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessType").value("MOBILE"))
                .andExpect(jsonPath("$._embedded.simcards[2].activity").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].status").value("INSTORE"))
                .andExpect(jsonPath("$._embedded.simcards[2].nature").value("MAIN"))
                .andExpect(jsonPath("$._embedded.simcards[2].recyclable").value(false))
                .andExpect(jsonPath("$._embedded.simcards[2].preactivated").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].batchNumber").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.providerId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.name").value("Technicolor"))
                .andExpect(jsonPath("$._embedded.simcards[2].provider.accessType").value("DOCSIS"))
                .andExpect(jsonPath("$._embedded.simcards[2].warehouse").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].category").value("SIMCARD"))
                .andExpect(jsonPath("$._embedded.simcards[2].events", hasSize(1)))
                .andExpect(jsonPath("$._embedded.simcards[2].events[0]").value("available"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiNumber").value("272030100000002"))
                .andExpect(jsonPath("$._embedded.simcards[2].imsiSponsorNumber").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin1Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].puk2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].pin2Code").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].authKey").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].accessControlClass").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.plmnId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.code").value("27203"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.networkName").value("Meteor Mobile Telecommunications Limited"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.tadigCode").value("IRLME"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryIsoCode").value("IRL"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.countryName").value("Ireland"))
                .andExpect(jsonPath("$._embedded.simcards[2].plmn.rangesPrefix").value("3368900890401"))
                .andExpect(jsonPath("$._embedded.simcards[2].serviceId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].packId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].transportKey").value("6"))
                .andExpect(jsonPath("$._embedded.simcards[2].algorithmVersion").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].checkDigit").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.inventoryPoolId").value(1))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.code").value("METERO_PAIRED_CUSTOMER_POOL"))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.description").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.mvno").value(0))
                .andExpect(jsonPath("$._embedded.simcards[2].inventoryPool.simProfile").value("DEFAULT"))
                .andExpect(jsonPath("$._embedded.simcards[2].allotmentId").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._embedded.simcards[2].esim").value(false))
                .andExpect(jsonPath("$._embedded.simcards[2].otaSalt").value(IsNull.nullValue()))
                .andExpect(jsonPath("$._links.self.href").value("http://localhost/simcards"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_failureNotInitializedIccidSequence() throws Exception {
        mockMvc.perform(post("/private/auth/batch/7/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isBadRequest())
                .andExpect(content().json("{\"errorMessage\":\"ICCID sequence 'MISSING_SEQUENCE' has not been initialized\"}"));
    }

    @Test
    void exportWithExistingBatch_simCardGeneration_failureForFinishedIccidSequence() throws Exception {
        mockMvc.perform(post("/private/auth/batch/8/export")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"quantity\": 3}"))
                .andDo(print())
                .andExpect(status().isBadRequest())
                .andExpect(content().json("{\"errorMessage\":\"ICCID Sequence 'FINISHED_SEQUENCE' cannot be used any more, as its theoretical next value '666666' is already defined by sequence 'ANOTHER_SEQUENCE'\"}"));
    }
}
